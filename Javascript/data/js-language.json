{
  "categories": {
    "Core Language Syntax": {
      "name": "Core Language Syntax",
      "subcategories": {
        "Keywords and Operators": {
          "name": "Keywords and Operators",
          "objects": {},
          "keywords": {
            "break": {
              "name": "break",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Terminates the current loop, switch, or labeled statement.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "case": {
              "name": "case",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Used in switch statements to define a case to be matched.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "async": {
              "name": "async",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Declares an asynchronous function or method.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "await": {
              "name": "await",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Waits for a Promise to resolve within an async function.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "catch": {
              "name": "catch",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Used with try statements to handle exceptions.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "class": {
              "name": "class",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Declares a class with optional inheritance.",
              "attributes": {
                "extends": {
                  "name": "extends",
                  "description": "Optional superclass to inherit from",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "const": {
              "name": "const",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Declares a block-scoped constant variable.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "continue": {
              "name": "continue",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Skips the current iteration of a loop.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "debugger": {
              "name": "debugger",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Invokes debugging functionality.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "default": {
              "name": "default",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Used in switch statements for the default case, or in export statements.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "delete": {
              "name": "delete",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Removes a property from an object.",
              "attributes": {
                "None specific to this operator": {
                  "name": "None specific to this operator",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "do": {
              "name": "do",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Creates a do-while loop.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "else": {
              "name": "else",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Used with if statements for the alternative branch.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "export": {
              "name": "export",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Exports values from a module.",
              "attributes": {
                "default": {
                  "name": "default",
                  "description": "Whether this is the default export",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "extends": {
              "name": "extends",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Used in class declarations to create inheritance.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "finally": {
              "name": "finally",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Used with try statements for cleanup code.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "for": {
              "name": "for",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Creates various types of loops.",
              "attributes": {
                "in": {
                  "name": "in",
                  "description": "For-in loop over object properties",
                  "type": "attribute"
                },
                "of": {
                  "name": "of",
                  "description": "For-of loop over iterable values",
                  "type": "attribute"
                },
                "await": {
                  "name": "await",
                  "description": "For-await-of loop over async iterables",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "function": {
              "name": "function",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Declares a function.",
              "attributes": {
                "async": {
                  "name": "async",
                  "description": "Whether the function is asynchronous",
                  "type": "attribute"
                },
                "generator": {
                  "name": "generator",
                  "description": "Whether the function is a generator (*)",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "if": {
              "name": "if",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Creates conditional statements.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "import": {
              "name": "import",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Imports values from other modules.",
              "attributes": {
                "default": {
                  "name": "default",
                  "description": "Whether importing the default export",
                  "type": "attribute"
                },
                "namespace": {
                  "name": "namespace",
                  "description": "Whether importing all exports as namespace",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "in": {
              "name": "in",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Tests if a property exists in an object.",
              "attributes": {
                "None specific to this operator": {
                  "name": "None specific to this operator",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "instanceof": {
              "name": "instanceof",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Tests if an object is an instance of a specific constructor.",
              "attributes": {
                "None specific to this operator": {
                  "name": "None specific to this operator",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "let": {
              "name": "let",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Declares a block-scoped variable.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "new": {
              "name": "new",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Creates an instance of an object.",
              "attributes": {
                "target": {
                  "name": "target",
                  "description": "In constructors, references the constructor being called",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "null": {
              "name": "null",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Represents intentional absence of any object value.",
              "attributes": {
                "None specific to this literal": {
                  "name": "None specific to this literal",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "return": {
              "name": "return",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Returns a value from a function.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "super": {
              "name": "super",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Refers to the parent class constructor or methods.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "switch": {
              "name": "switch",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Creates a switch statement.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "this": {
              "name": "this",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Refers to the current execution context.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "throw": {
              "name": "throw",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Throws an exception.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "try": {
              "name": "try",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Creates a try-catch-finally block.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "typeof": {
              "name": "typeof",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Returns the type of a variable.",
              "attributes": {
                "None specific to this operator": {
                  "name": "None specific to this operator",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "undefined": {
              "name": "undefined",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Represents an undefined value.",
              "attributes": {
                "None specific to this literal": {
                  "name": "None specific to this literal",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "var": {
              "name": "var",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Declares a function-scoped variable.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "void": {
              "name": "void",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Evaluates an expression and returns undefined.",
              "attributes": {
                "None specific to this operator": {
                  "name": "None specific to this operator",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "while": {
              "name": "while",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Creates a while loop.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "with": {
              "name": "with",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Creates a with statement (deprecated).",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "yield": {
              "name": "yield",
              "category": "Core Language Syntax",
              "subcategory": "Keywords and Operators",
              "description": "Pauses and resumes a generator function.",
              "attributes": {
                "None specific to this keyword": {
                  "name": "None specific to this keyword",
                  "description": "",
                  "type": "attribute"
                }
              },
              "examples": []
            }
          }
        },
        "Modern Operators and Syntax": {
          "name": "Modern Operators and Syntax",
          "objects": {
            "...": {
              "name": "...",
              "category": "Core Language Syntax",
              "subcategory": "Modern Operators and Syntax",
              "description": "Spread and rest operator for arrays, objects, and function parameters.",
              "properties": {},
              "methods": {},
              "staticMethods": {},
              "examples": []
            },
            "??": {
              "name": "??",
              "category": "Core Language Syntax",
              "subcategory": "Modern Operators and Syntax",
              "description": "Nullish coalescing operator returns right operand when left is null or undefined.",
              "properties": {},
              "methods": {},
              "staticMethods": {},
              "examples": []
            },
            "?.": {
              "name": "?.",
              "category": "Core Language Syntax",
              "subcategory": "Modern Operators and Syntax",
              "description": "Optional chaining operator safely accesses nested object properties.",
              "properties": {},
              "methods": {},
              "staticMethods": {},
              "examples": []
            },
            "**": {
              "name": "**",
              "category": "Core Language Syntax",
              "subcategory": "Modern Operators and Syntax",
              "description": "Exponentiation operator performs mathematical exponentiation.",
              "properties": {},
              "methods": {},
              "staticMethods": {},
              "examples": []
            },
            "**=": {
              "name": "**=",
              "category": "Core Language Syntax",
              "subcategory": "Modern Operators and Syntax",
              "description": "Exponentiation assignment operator.",
              "properties": {},
              "methods": {},
              "staticMethods": {},
              "examples": []
            },
            "&&=": {
              "name": "&&=",
              "category": "Core Language Syntax",
              "subcategory": "Modern Operators and Syntax",
              "description": "Logical AND assignment operator.",
              "properties": {},
              "methods": {},
              "staticMethods": {},
              "examples": []
            },
            "||=": {
              "name": "||=",
              "category": "Core Language Syntax",
              "subcategory": "Modern Operators and Syntax",
              "description": "Logical OR assignment operator.",
              "properties": {},
              "methods": {},
              "staticMethods": {},
              "examples": []
            },
            "??=": {
              "name": "??=",
              "category": "Core Language Syntax",
              "subcategory": "Modern Operators and Syntax",
              "description": "Nullish coalescing assignment operator.",
              "properties": {},
              "methods": {},
              "staticMethods": {},
              "examples": []
            },
            "=": {
              "name": "=",
              "category": "Core Language Syntax",
              "subcategory": "Modern Operators and Syntax",
              "description": "Arrow function syntax for creating function expressions.",
              "properties": {},
              "methods": {},
              "staticMethods": {},
              "examples": []
            }
          },
          "keywords": {}
        }
      },
      "objects": {
        "...": {
          "name": "...",
          "category": "Core Language Syntax",
          "subcategory": "Modern Operators and Syntax",
          "description": "Spread and rest operator for arrays, objects, and function parameters.",
          "properties": {},
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "??": {
          "name": "??",
          "category": "Core Language Syntax",
          "subcategory": "Modern Operators and Syntax",
          "description": "Nullish coalescing operator returns right operand when left is null or undefined.",
          "properties": {},
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "?.": {
          "name": "?.",
          "category": "Core Language Syntax",
          "subcategory": "Modern Operators and Syntax",
          "description": "Optional chaining operator safely accesses nested object properties.",
          "properties": {},
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "**": {
          "name": "**",
          "category": "Core Language Syntax",
          "subcategory": "Modern Operators and Syntax",
          "description": "Exponentiation operator performs mathematical exponentiation.",
          "properties": {},
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "**=": {
          "name": "**=",
          "category": "Core Language Syntax",
          "subcategory": "Modern Operators and Syntax",
          "description": "Exponentiation assignment operator.",
          "properties": {},
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "&&=": {
          "name": "&&=",
          "category": "Core Language Syntax",
          "subcategory": "Modern Operators and Syntax",
          "description": "Logical AND assignment operator.",
          "properties": {},
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "||=": {
          "name": "||=",
          "category": "Core Language Syntax",
          "subcategory": "Modern Operators and Syntax",
          "description": "Logical OR assignment operator.",
          "properties": {},
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "??=": {
          "name": "??=",
          "category": "Core Language Syntax",
          "subcategory": "Modern Operators and Syntax",
          "description": "Nullish coalescing assignment operator.",
          "properties": {},
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "=": {
          "name": "=",
          "category": "Core Language Syntax",
          "subcategory": "Modern Operators and Syntax",
          "description": "Arrow function syntax for creating function expressions.",
          "properties": {},
          "methods": {},
          "staticMethods": {},
          "examples": []
        }
      },
      "keywords": {
        "break": {
          "name": "break",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Terminates the current loop, switch, or labeled statement.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "case": {
          "name": "case",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Used in switch statements to define a case to be matched.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "async": {
          "name": "async",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Declares an asynchronous function or method.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "await": {
          "name": "await",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Waits for a Promise to resolve within an async function.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "catch": {
          "name": "catch",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Used with try statements to handle exceptions.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "class": {
          "name": "class",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Declares a class with optional inheritance.",
          "attributes": {
            "extends": {
              "name": "extends",
              "description": "Optional superclass to inherit from",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "const": {
          "name": "const",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Declares a block-scoped constant variable.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "continue": {
          "name": "continue",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Skips the current iteration of a loop.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "debugger": {
          "name": "debugger",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Invokes debugging functionality.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "default": {
          "name": "default",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Used in switch statements for the default case, or in export statements.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "delete": {
          "name": "delete",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Removes a property from an object.",
          "attributes": {
            "None specific to this operator": {
              "name": "None specific to this operator",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "do": {
          "name": "do",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Creates a do-while loop.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "else": {
          "name": "else",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Used with if statements for the alternative branch.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "export": {
          "name": "export",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Exports values from a module.",
          "attributes": {
            "default": {
              "name": "default",
              "description": "Whether this is the default export",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "extends": {
          "name": "extends",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Used in class declarations to create inheritance.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "finally": {
          "name": "finally",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Used with try statements for cleanup code.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "for": {
          "name": "for",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Creates various types of loops.",
          "attributes": {
            "in": {
              "name": "in",
              "description": "For-in loop over object properties",
              "type": "attribute"
            },
            "of": {
              "name": "of",
              "description": "For-of loop over iterable values",
              "type": "attribute"
            },
            "await": {
              "name": "await",
              "description": "For-await-of loop over async iterables",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "function": {
          "name": "function",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Declares a function.",
          "attributes": {
            "async": {
              "name": "async",
              "description": "Whether the function is asynchronous",
              "type": "attribute"
            },
            "generator": {
              "name": "generator",
              "description": "Whether the function is a generator (*)",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "if": {
          "name": "if",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Creates conditional statements.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "import": {
          "name": "import",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Imports values from other modules.",
          "attributes": {
            "default": {
              "name": "default",
              "description": "Whether importing the default export",
              "type": "attribute"
            },
            "namespace": {
              "name": "namespace",
              "description": "Whether importing all exports as namespace",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "in": {
          "name": "in",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Tests if a property exists in an object.",
          "attributes": {
            "None specific to this operator": {
              "name": "None specific to this operator",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "instanceof": {
          "name": "instanceof",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Tests if an object is an instance of a specific constructor.",
          "attributes": {
            "None specific to this operator": {
              "name": "None specific to this operator",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "let": {
          "name": "let",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Declares a block-scoped variable.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "new": {
          "name": "new",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Creates an instance of an object.",
          "attributes": {
            "target": {
              "name": "target",
              "description": "In constructors, references the constructor being called",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "null": {
          "name": "null",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Represents intentional absence of any object value.",
          "attributes": {
            "None specific to this literal": {
              "name": "None specific to this literal",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "return": {
          "name": "return",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Returns a value from a function.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "super": {
          "name": "super",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Refers to the parent class constructor or methods.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "switch": {
          "name": "switch",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Creates a switch statement.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "this": {
          "name": "this",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Refers to the current execution context.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "throw": {
          "name": "throw",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Throws an exception.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "try": {
          "name": "try",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Creates a try-catch-finally block.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "typeof": {
          "name": "typeof",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Returns the type of a variable.",
          "attributes": {
            "None specific to this operator": {
              "name": "None specific to this operator",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "undefined": {
          "name": "undefined",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Represents an undefined value.",
          "attributes": {
            "None specific to this literal": {
              "name": "None specific to this literal",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "var": {
          "name": "var",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Declares a function-scoped variable.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "void": {
          "name": "void",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Evaluates an expression and returns undefined.",
          "attributes": {
            "None specific to this operator": {
              "name": "None specific to this operator",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "while": {
          "name": "while",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Creates a while loop.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "with": {
          "name": "with",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Creates a with statement (deprecated).",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "yield": {
          "name": "yield",
          "category": "Core Language Syntax",
          "subcategory": "Keywords and Operators",
          "description": "Pauses and resumes a generator function.",
          "attributes": {
            "None specific to this keyword": {
              "name": "None specific to this keyword",
              "description": "",
              "type": "attribute"
            }
          },
          "examples": []
        }
      }
    },
    "Built-in Objects": {
      "name": "Built-in Objects",
      "subcategories": {
        "Global Objects": {
          "name": "Global Objects",
          "objects": {
            "Object": {
              "name": "Object",
              "category": "Built-in Objects",
              "subcategory": "Global Objects",
              "description": "The base object from which all JavaScript objects inherit.",
              "properties": {},
              "methods": {
                "assign": {
                  "name": "assign",
                  "description": "Copies properties from source objects to target object",
                  "type": "method",
                  "static": false
                },
                "create": {
                  "name": "create",
                  "description": "Creates a new object with specified prototype",
                  "type": "method",
                  "static": false
                },
                "defineProperty": {
                  "name": "defineProperty",
                  "description": "Defines a new property or modifies an existing property",
                  "type": "method",
                  "static": false
                },
                "defineProperties": {
                  "name": "defineProperties",
                  "description": "Defines multiple properties",
                  "type": "method",
                  "static": false
                },
                "entries": {
                  "name": "entries",
                  "description": "Returns array of key-value pairs",
                  "type": "method",
                  "static": false
                },
                "freeze": {
                  "name": "freeze",
                  "description": "Freezes an object, preventing modifications",
                  "type": "method",
                  "static": false
                },
                "fromEntries": {
                  "name": "fromEntries",
                  "description": "Creates object from array of key-value pairs",
                  "type": "method",
                  "static": false
                },
                "getOwnPropertyDescriptor": {
                  "name": "getOwnPropertyDescriptor",
                  "description": "Returns property descriptor",
                  "type": "method",
                  "static": false
                },
                "getOwnPropertyDescriptors": {
                  "name": "getOwnPropertyDescriptors",
                  "description": "Returns all property descriptors",
                  "type": "method",
                  "static": false
                },
                "getOwnPropertyNames": {
                  "name": "getOwnPropertyNames",
                  "description": "Returns array of all property names",
                  "type": "method",
                  "static": false
                },
                "getOwnPropertySymbols": {
                  "name": "getOwnPropertySymbols",
                  "description": "Returns array of symbol properties",
                  "type": "method",
                  "static": false
                },
                "getPrototypeOf": {
                  "name": "getPrototypeOf",
                  "description": "Returns the prototype of an object",
                  "type": "method",
                  "static": false
                },
                "hasOwnProperty": {
                  "name": "hasOwnProperty",
                  "description": "Tests if object has specified property",
                  "type": "method",
                  "static": false
                },
                "is": {
                  "name": "is",
                  "description": "Determines if two values are the same",
                  "type": "method",
                  "static": false
                },
                "isExtensible": {
                  "name": "isExtensible",
                  "description": "Determines if object is extensible",
                  "type": "method",
                  "static": false
                },
                "isFrozen": {
                  "name": "isFrozen",
                  "description": "Determines if object is frozen",
                  "type": "method",
                  "static": false
                },
                "isSealed": {
                  "name": "isSealed",
                  "description": "Determines if object is sealed",
                  "type": "method",
                  "static": false
                },
                "keys": {
                  "name": "keys",
                  "description": "Returns array of property names",
                  "type": "method",
                  "static": false
                },
                "preventExtensions": {
                  "name": "preventExtensions",
                  "description": "Prevents new properties from being added",
                  "type": "method",
                  "static": false
                },
                "seal": {
                  "name": "seal",
                  "description": "Seals an object, preventing new properties",
                  "type": "method",
                  "static": false
                },
                "setPrototypeOf": {
                  "name": "setPrototypeOf",
                  "description": "Sets the prototype of an object",
                  "type": "method",
                  "static": false
                },
                "values": {
                  "name": "values",
                  "description": "Returns array of property values",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "Array": {
              "name": "Array",
              "category": "Built-in Objects",
              "subcategory": "Global Objects",
              "description": "Represents an array of items.",
              "properties": {
                "length": {
                  "name": "length",
                  "description": "Number of elements in the array",
                  "type": "property"
                }
              },
              "methods": {
                "at": {
                  "name": "at",
                  "description": "Returns element at specified index (supports negative indices)",
                  "type": "method",
                  "static": false
                },
                "concat": {
                  "name": "concat",
                  "description": "Merges arrays and returns new array",
                  "type": "method",
                  "static": false
                },
                "copyWithin": {
                  "name": "copyWithin",
                  "description": "Copies array elements within the array",
                  "type": "method",
                  "static": false
                },
                "entries": {
                  "name": "entries",
                  "description": "Returns iterator of key-value pairs",
                  "type": "method",
                  "static": false
                },
                "every": {
                  "name": "every",
                  "description": "Tests if all elements pass the test function",
                  "type": "method",
                  "static": false
                },
                "fill": {
                  "name": "fill",
                  "description": "Fills array elements with a static value",
                  "type": "method",
                  "static": false
                },
                "filter": {
                  "name": "filter",
                  "description": "Creates new array with elements that pass the test",
                  "type": "method",
                  "static": false
                },
                "find": {
                  "name": "find",
                  "description": "Returns first element that matches the test function",
                  "type": "method",
                  "static": false
                },
                "findIndex": {
                  "name": "findIndex",
                  "description": "Returns index of first element that matches the test",
                  "type": "method",
                  "static": false
                },
                "findLast": {
                  "name": "findLast",
                  "description": "Returns last element that matches the test function",
                  "type": "method",
                  "static": false
                },
                "findLastIndex": {
                  "name": "findLastIndex",
                  "description": "Returns index of last element that matches the test",
                  "type": "method",
                  "static": false
                },
                "flat": {
                  "name": "flat",
                  "description": "Flattens nested arrays to specified depth",
                  "type": "method",
                  "static": false
                },
                "flatMap": {
                  "name": "flatMap",
                  "description": "Maps and flattens array to specified depth",
                  "type": "method",
                  "static": false
                },
                "forEach": {
                  "name": "forEach",
                  "description": "Executes function for each array element",
                  "type": "method",
                  "static": false
                },
                "from": {
                  "name": "from",
                  "description": "Creates array from array-like or iterable object",
                  "type": "method",
                  "static": false
                },
                "includes": {
                  "name": "includes",
                  "description": "Determines if array includes certain element",
                  "type": "method",
                  "static": false
                },
                "indexOf": {
                  "name": "indexOf",
                  "description": "Returns first index of specified element",
                  "type": "method",
                  "static": false
                },
                "isArray": {
                  "name": "isArray",
                  "description": "Determines if value is an array",
                  "type": "method",
                  "static": false
                },
                "join": {
                  "name": "join",
                  "description": "Joins array elements into a string",
                  "type": "method",
                  "static": false
                },
                "keys": {
                  "name": "keys",
                  "description": "Returns iterator of array indices",
                  "type": "method",
                  "static": false
                },
                "lastIndexOf": {
                  "name": "lastIndexOf",
                  "description": "Returns last index of specified element",
                  "type": "method",
                  "static": false
                },
                "map": {
                  "name": "map",
                  "description": "Creates new array with results of calling function on every element",
                  "type": "method",
                  "static": false
                },
                "of": {
                  "name": "of",
                  "description": "Creates array from variable number of arguments",
                  "type": "method",
                  "static": false
                },
                "pop": {
                  "name": "pop",
                  "description": "Removes and returns last element",
                  "type": "method",
                  "static": false
                },
                "push": {
                  "name": "push",
                  "description": "Adds elements to end of array",
                  "type": "method",
                  "static": false
                },
                "reduce": {
                  "name": "reduce",
                  "description": "Reduces array to single value (left-to-right)",
                  "type": "method",
                  "static": false
                },
                "reduceRight": {
                  "name": "reduceRight",
                  "description": "Reduces array to single value (right-to-left)",
                  "type": "method",
                  "static": false
                },
                "reverse": {
                  "name": "reverse",
                  "description": "Reverses array in place",
                  "type": "method",
                  "static": false
                },
                "shift": {
                  "name": "shift",
                  "description": "Removes and returns first element",
                  "type": "method",
                  "static": false
                },
                "slice": {
                  "name": "slice",
                  "description": "Returns shallow copy of portion of array",
                  "type": "method",
                  "static": false
                },
                "some": {
                  "name": "some",
                  "description": "Tests if at least one element passes the test",
                  "type": "method",
                  "static": false
                },
                "sort": {
                  "name": "sort",
                  "description": "Sorts array elements in place",
                  "type": "method",
                  "static": false
                },
                "splice": {
                  "name": "splice",
                  "description": "Changes array by removing/replacing/adding elements",
                  "type": "method",
                  "static": false
                },
                "toLocaleString": {
                  "name": "toLocaleString",
                  "description": "Returns localized string representation",
                  "type": "method",
                  "static": false
                },
                "toString": {
                  "name": "toString",
                  "description": "Returns string representation",
                  "type": "method",
                  "static": false
                },
                "unshift": {
                  "name": "unshift",
                  "description": "Adds elements to beginning of array",
                  "type": "method",
                  "static": false
                },
                "values": {
                  "name": "values",
                  "description": "Returns iterator of array values",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "String": {
              "name": "String",
              "category": "Built-in Objects",
              "subcategory": "Global Objects",
              "description": "Represents text data.",
              "properties": {
                "length": {
                  "name": "length",
                  "description": "Number of characters in the string",
                  "type": "property"
                }
              },
              "methods": {
                "at": {
                  "name": "at",
                  "description": "Returns character at specified index (supports negative indices)",
                  "type": "method",
                  "static": false
                },
                "charAt": {
                  "name": "charAt",
                  "description": "Returns character at specified index",
                  "type": "method",
                  "static": false
                },
                "charCodeAt": {
                  "name": "charCodeAt",
                  "description": "Returns Unicode code point at specified index",
                  "type": "method",
                  "static": false
                },
                "codePointAt": {
                  "name": "codePointAt",
                  "description": "Returns Unicode code point value at specified position",
                  "type": "method",
                  "static": false
                },
                "concat": {
                  "name": "concat",
                  "description": "Concatenates strings",
                  "type": "method",
                  "static": false
                },
                "endsWith": {
                  "name": "endsWith",
                  "description": "Determines if string ends with specified substring",
                  "type": "method",
                  "static": false
                },
                "fromCharCode": {
                  "name": "fromCharCode",
                  "description": "Creates string from Unicode code points",
                  "type": "method",
                  "static": false
                },
                "fromCodePoint": {
                  "name": "fromCodePoint",
                  "description": "Creates string from Unicode code points",
                  "type": "method",
                  "static": false
                },
                "includes": {
                  "name": "includes",
                  "description": "Determines if string contains specified substring",
                  "type": "method",
                  "static": false
                },
                "indexOf": {
                  "name": "indexOf",
                  "description": "Returns index of first occurrence of substring",
                  "type": "method",
                  "static": false
                },
                "lastIndexOf": {
                  "name": "lastIndexOf",
                  "description": "Returns index of last occurrence of substring",
                  "type": "method",
                  "static": false
                },
                "localeCompare": {
                  "name": "localeCompare",
                  "description": "Compares strings according to locale",
                  "type": "method",
                  "static": false
                },
                "match": {
                  "name": "match",
                  "description": "Matches string against regular expression",
                  "type": "method",
                  "static": false
                },
                "matchAll": {
                  "name": "matchAll",
                  "description": "Returns iterator of all regex matches",
                  "type": "method",
                  "static": false
                },
                "normalize": {
                  "name": "normalize",
                  "description": "Returns Unicode normalized form of string",
                  "type": "method",
                  "static": false
                },
                "padEnd": {
                  "name": "padEnd",
                  "description": "Pads string from end to specified length",
                  "type": "method",
                  "static": false
                },
                "padStart": {
                  "name": "padStart",
                  "description": "Pads string from start to specified length",
                  "type": "method",
                  "static": false
                },
                "repeat": {
                  "name": "repeat",
                  "description": "Returns string repeated specified number of times",
                  "type": "method",
                  "static": false
                },
                "replace": {
                  "name": "replace",
                  "description": "Replaces substring with new string",
                  "type": "method",
                  "static": false
                },
                "replaceAll": {
                  "name": "replaceAll",
                  "description": "Replaces all occurrences of substring",
                  "type": "method",
                  "static": false
                },
                "search": {
                  "name": "search",
                  "description": "Searches for regex match and returns index",
                  "type": "method",
                  "static": false
                },
                "slice": {
                  "name": "slice",
                  "description": "Extracts section of string",
                  "type": "method",
                  "static": false
                },
                "split": {
                  "name": "split",
                  "description": "Splits string into array of substrings",
                  "type": "method",
                  "static": false
                },
                "startsWith": {
                  "name": "startsWith",
                  "description": "Determines if string starts with specified substring",
                  "type": "method",
                  "static": false
                },
                "substring": {
                  "name": "substring",
                  "description": "Returns substring between two indices",
                  "type": "method",
                  "static": false
                },
                "toLocaleLowerCase": {
                  "name": "toLocaleLowerCase",
                  "description": "Returns lowercase string according to locale",
                  "type": "method",
                  "static": false
                },
                "toLocaleUpperCase": {
                  "name": "toLocaleUpperCase",
                  "description": "Returns uppercase string according to locale",
                  "type": "method",
                  "static": false
                },
                "toLowerCase": {
                  "name": "toLowerCase",
                  "description": "Returns lowercase string",
                  "type": "method",
                  "static": false
                },
                "toString": {
                  "name": "toString",
                  "description": "Returns string value",
                  "type": "method",
                  "static": false
                },
                "toUpperCase": {
                  "name": "toUpperCase",
                  "description": "Returns uppercase string",
                  "type": "method",
                  "static": false
                },
                "trim": {
                  "name": "trim",
                  "description": "Removes whitespace from both ends",
                  "type": "method",
                  "static": false
                },
                "trimEnd": {
                  "name": "trimEnd",
                  "description": "Removes whitespace from end",
                  "type": "method",
                  "static": false
                },
                "trimStart": {
                  "name": "trimStart",
                  "description": "Removes whitespace from start",
                  "type": "method",
                  "static": false
                },
                "valueOf": {
                  "name": "valueOf",
                  "description": "Returns primitive string value",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "Number": {
              "name": "Number",
              "category": "Built-in Objects",
              "subcategory": "Global Objects",
              "description": "Represents numeric data.",
              "properties": {
                "EPSILON": {
                  "name": "EPSILON",
                  "description": "Smallest representable positive number",
                  "type": "property"
                },
                "MAX_SAFE_INTEGER": {
                  "name": "MAX_SAFE_INTEGER",
                  "description": "Maximum safe integer value",
                  "type": "property"
                },
                "MAX_VALUE": {
                  "name": "MAX_VALUE",
                  "description": "Maximum representable positive number",
                  "type": "property"
                },
                "MIN_SAFE_INTEGER": {
                  "name": "MIN_SAFE_INTEGER",
                  "description": "Minimum safe integer value",
                  "type": "property"
                },
                "MIN_VALUE": {
                  "name": "MIN_VALUE",
                  "description": "Smallest representable positive number",
                  "type": "property"
                },
                "NEGATIVE_INFINITY": {
                  "name": "NEGATIVE_INFINITY",
                  "description": "Negative infinity value",
                  "type": "property"
                },
                "NaN": {
                  "name": "NaN",
                  "description": "\"Not a Number\" value",
                  "type": "property"
                },
                "POSITIVE_INFINITY": {
                  "name": "POSITIVE_INFINITY",
                  "description": "Positive infinity value",
                  "type": "property"
                }
              },
              "methods": {
                "isFinite": {
                  "name": "isFinite",
                  "description": "Determines if value is finite number",
                  "type": "method",
                  "static": false
                },
                "isInteger": {
                  "name": "isInteger",
                  "description": "Determines if value is integer",
                  "type": "method",
                  "static": false
                },
                "isNaN": {
                  "name": "isNaN",
                  "description": "Determines if value is NaN",
                  "type": "method",
                  "static": false
                },
                "isSafeInteger": {
                  "name": "isSafeInteger",
                  "description": "Determines if value is safe integer",
                  "type": "method",
                  "static": false
                },
                "parseFloat": {
                  "name": "parseFloat",
                  "description": "Parses string and returns floating point number",
                  "type": "method",
                  "static": false
                },
                "parseInt": {
                  "name": "parseInt",
                  "description": "Parses string and returns integer",
                  "type": "method",
                  "static": false
                },
                "toExponential": {
                  "name": "toExponential",
                  "description": "Returns string in exponential notation",
                  "type": "method",
                  "static": false
                },
                "toFixed": {
                  "name": "toFixed",
                  "description": "Returns string with fixed number of decimal places",
                  "type": "method",
                  "static": false
                },
                "toLocaleString": {
                  "name": "toLocaleString",
                  "description": "Returns localized string representation",
                  "type": "method",
                  "static": false
                },
                "toPrecision": {
                  "name": "toPrecision",
                  "description": "Returns string with specified precision",
                  "type": "method",
                  "static": false
                },
                "toString": {
                  "name": "toString",
                  "description": "Returns string representation",
                  "type": "method",
                  "static": false
                },
                "valueOf": {
                  "name": "valueOf",
                  "description": "Returns primitive number value",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "Boolean": {
              "name": "Boolean",
              "category": "Built-in Objects",
              "subcategory": "Global Objects",
              "description": "Represents true/false values.",
              "properties": {},
              "methods": {
                "toString": {
                  "name": "toString",
                  "description": "Returns string representation (\"true\" or \"false\")",
                  "type": "method",
                  "static": false
                },
                "valueOf": {
                  "name": "valueOf",
                  "description": "Returns primitive boolean value",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "Function": {
              "name": "Function",
              "category": "Built-in Objects",
              "subcategory": "Global Objects",
              "description": "Represents executable code.",
              "properties": {
                "length": {
                  "name": "length",
                  "description": "Number of expected arguments",
                  "type": "property"
                },
                "name": {
                  "name": "name",
                  "description": "Function name",
                  "type": "property"
                }
              },
              "methods": {
                "apply": {
                  "name": "apply",
                  "description": "Calls function with given this value and arguments array",
                  "type": "method",
                  "static": false
                },
                "bind": {
                  "name": "bind",
                  "description": "Creates new function with specified this value and arguments",
                  "type": "method",
                  "static": false
                },
                "call": {
                  "name": "call",
                  "description": "Calls function with given this value and individual arguments",
                  "type": "method",
                  "static": false
                },
                "toString": {
                  "name": "toString",
                  "description": "Returns string representation of function",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            }
          },
          "keywords": {}
        },
        "Error Objects": {
          "name": "Error Objects",
          "objects": {
            "Error": {
              "name": "Error",
              "category": "Built-in Objects",
              "subcategory": "Error Objects",
              "description": "Represents runtime errors.",
              "properties": {
                "message": {
                  "name": "message",
                  "description": "Error description",
                  "type": "property"
                },
                "name": {
                  "name": "name",
                  "description": "Error name",
                  "type": "property"
                },
                "stack": {
                  "name": "stack",
                  "description": "Stack trace (non-standard but widely supported)",
                  "type": "property"
                }
              },
              "methods": {
                "toString": {
                  "name": "toString",
                  "description": "Returns string representation of error",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "SyntaxError": {
              "name": "SyntaxError",
              "category": "Built-in Objects",
              "subcategory": "Error Objects",
              "description": "Represents syntax errors in code.",
              "properties": {
                "message": {
                  "name": "message",
                  "description": "Error description",
                  "type": "property"
                },
                "name": {
                  "name": "name",
                  "description": "Error name (\"SyntaxError\")",
                  "type": "property"
                }
              },
              "methods": {},
              "staticMethods": {},
              "examples": []
            },
            "ReferenceError": {
              "name": "ReferenceError",
              "category": "Built-in Objects",
              "subcategory": "Error Objects",
              "description": "Represents reference errors (undefined variables).",
              "properties": {
                "message": {
                  "name": "message",
                  "description": "Error description",
                  "type": "property"
                },
                "name": {
                  "name": "name",
                  "description": "Error name (\"ReferenceError\")",
                  "type": "property"
                }
              },
              "methods": {},
              "staticMethods": {},
              "examples": []
            },
            "TypeError": {
              "name": "TypeError",
              "category": "Built-in Objects",
              "subcategory": "Error Objects",
              "description": "Represents type errors.",
              "properties": {
                "message": {
                  "name": "message",
                  "description": "Error description",
                  "type": "property"
                },
                "name": {
                  "name": "name",
                  "description": "Error name (\"TypeError\")",
                  "type": "property"
                }
              },
              "methods": {},
              "staticMethods": {},
              "examples": []
            },
            "RangeError": {
              "name": "RangeError",
              "category": "Built-in Objects",
              "subcategory": "Error Objects",
              "description": "Represents range errors.",
              "properties": {
                "message": {
                  "name": "message",
                  "description": "Error description",
                  "type": "property"
                },
                "name": {
                  "name": "name",
                  "description": "Error name (\"RangeError\")",
                  "type": "property"
                }
              },
              "methods": {},
              "staticMethods": {},
              "examples": []
            }
          },
          "keywords": {}
        },
        "Date and Math": {
          "name": "Date and Math",
          "objects": {
            "Date": {
              "name": "Date",
              "category": "Built-in Objects",
              "subcategory": "Date and Math",
              "description": "Represents dates and times.",
              "properties": {},
              "methods": {
                "getDate": {
                  "name": "getDate",
                  "description": "Returns day of month (1-31)",
                  "type": "method",
                  "static": false
                },
                "getDay": {
                  "name": "getDay",
                  "description": "Returns day of week (0-6)",
                  "type": "method",
                  "static": false
                },
                "getFullYear": {
                  "name": "getFullYear",
                  "description": "Returns full year",
                  "type": "method",
                  "static": false
                },
                "getHours": {
                  "name": "getHours",
                  "description": "Returns hours (0-23)",
                  "type": "method",
                  "static": false
                },
                "getMilliseconds": {
                  "name": "getMilliseconds",
                  "description": "Returns milliseconds (0-999)",
                  "type": "method",
                  "static": false
                },
                "getMinutes": {
                  "name": "getMinutes",
                  "description": "Returns minutes (0-59)",
                  "type": "method",
                  "static": false
                },
                "getMonth": {
                  "name": "getMonth",
                  "description": "Returns month (0-11)",
                  "type": "method",
                  "static": false
                },
                "getSeconds": {
                  "name": "getSeconds",
                  "description": "Returns seconds (0-59)",
                  "type": "method",
                  "static": false
                },
                "getTime": {
                  "name": "getTime",
                  "description": "Returns milliseconds since epoch",
                  "type": "method",
                  "static": false
                },
                "getTimezoneOffset": {
                  "name": "getTimezoneOffset",
                  "description": "Returns timezone offset in minutes",
                  "type": "method",
                  "static": false
                },
                "setDate": {
                  "name": "setDate",
                  "description": "Sets day of month",
                  "type": "method",
                  "static": false
                },
                "setFullYear": {
                  "name": "setFullYear",
                  "description": "Sets full year",
                  "type": "method",
                  "static": false
                },
                "setHours": {
                  "name": "setHours",
                  "description": "Sets hours",
                  "type": "method",
                  "static": false
                },
                "setMilliseconds": {
                  "name": "setMilliseconds",
                  "description": "Sets milliseconds",
                  "type": "method",
                  "static": false
                },
                "setMinutes": {
                  "name": "setMinutes",
                  "description": "Sets minutes",
                  "type": "method",
                  "static": false
                },
                "setMonth": {
                  "name": "setMonth",
                  "description": "Sets month",
                  "type": "method",
                  "static": false
                },
                "setSeconds": {
                  "name": "setSeconds",
                  "description": "Sets seconds",
                  "type": "method",
                  "static": false
                },
                "setTime": {
                  "name": "setTime",
                  "description": "Sets time by milliseconds since epoch",
                  "type": "method",
                  "static": false
                },
                "toDateString": {
                  "name": "toDateString",
                  "description": "Returns date portion as string",
                  "type": "method",
                  "static": false
                },
                "toISOString": {
                  "name": "toISOString",
                  "description": "Returns ISO 8601 string",
                  "type": "method",
                  "static": false
                },
                "toJSON": {
                  "name": "toJSON",
                  "description": "Returns JSON representation",
                  "type": "method",
                  "static": false
                },
                "toLocaleDateString": {
                  "name": "toLocaleDateString",
                  "description": "Returns localized date string",
                  "type": "method",
                  "static": false
                },
                "toLocaleString": {
                  "name": "toLocaleString",
                  "description": "Returns localized date/time string",
                  "type": "method",
                  "static": false
                },
                "toLocaleTimeString": {
                  "name": "toLocaleTimeString",
                  "description": "Returns localized time string",
                  "type": "method",
                  "static": false
                },
                "toString": {
                  "name": "toString",
                  "description": "Returns string representation",
                  "type": "method",
                  "static": false
                },
                "toTimeString": {
                  "name": "toTimeString",
                  "description": "Returns time portion as string",
                  "type": "method",
                  "static": false
                },
                "toUTCString": {
                  "name": "toUTCString",
                  "description": "Returns UTC string",
                  "type": "method",
                  "static": false
                },
                "valueOf": {
                  "name": "valueOf",
                  "description": "Returns primitive number value",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {
                "now": {
                  "name": "now",
                  "description": "Returns current timestamp",
                  "type": "static method",
                  "static": true
                },
                "parse": {
                  "name": "parse",
                  "description": "Parses date string",
                  "type": "static method",
                  "static": true
                }
              },
              "examples": []
            },
            "Math": {
              "name": "Math",
              "category": "Built-in Objects",
              "subcategory": "Date and Math",
              "description": "Provides mathematical constants and functions.",
              "properties": {
                "E": {
                  "name": "E",
                  "description": "Euler's number",
                  "type": "property"
                },
                "LN10": {
                  "name": "LN10",
                  "description": "Natural logarithm of 10",
                  "type": "property"
                },
                "LN2": {
                  "name": "LN2",
                  "description": "Natural logarithm of 2",
                  "type": "property"
                },
                "LOG10E": {
                  "name": "LOG10E",
                  "description": "Base 10 logarithm of E",
                  "type": "property"
                },
                "LOG2E": {
                  "name": "LOG2E",
                  "description": "Base 2 logarithm of E",
                  "type": "property"
                },
                "PI": {
                  "name": "PI",
                  "description": "Pi constant",
                  "type": "property"
                },
                "SQRT1_2": {
                  "name": "SQRT1_2",
                  "description": "Square root of 1/2",
                  "type": "property"
                },
                "SQRT2": {
                  "name": "SQRT2",
                  "description": "Square root of 2",
                  "type": "property"
                }
              },
              "methods": {
                "abs": {
                  "name": "abs",
                  "description": "Absolute value",
                  "type": "method",
                  "static": false
                },
                "acos": {
                  "name": "acos",
                  "description": "Arccosine",
                  "type": "method",
                  "static": false
                },
                "acosh": {
                  "name": "acosh",
                  "description": "Hyperbolic arccosine",
                  "type": "method",
                  "static": false
                },
                "asin": {
                  "name": "asin",
                  "description": "Arcsine",
                  "type": "method",
                  "static": false
                },
                "asinh": {
                  "name": "asinh",
                  "description": "Hyperbolic arcsine",
                  "type": "method",
                  "static": false
                },
                "atan": {
                  "name": "atan",
                  "description": "Arctangent",
                  "type": "method",
                  "static": false
                },
                "atan2": {
                  "name": "atan2",
                  "description": "Arctangent of y/x",
                  "type": "method",
                  "static": false
                },
                "atanh": {
                  "name": "atanh",
                  "description": "Hyperbolic arctangent",
                  "type": "method",
                  "static": false
                },
                "cbrt": {
                  "name": "cbrt",
                  "description": "Cube root",
                  "type": "method",
                  "static": false
                },
                "ceil": {
                  "name": "ceil",
                  "description": "Ceiling (round up)",
                  "type": "method",
                  "static": false
                },
                "clz32": {
                  "name": "clz32",
                  "description": "Number of leading zero bits in 32-bit binary",
                  "type": "method",
                  "static": false
                },
                "cos": {
                  "name": "cos",
                  "description": "Cosine",
                  "type": "method",
                  "static": false
                },
                "cosh": {
                  "name": "cosh",
                  "description": "Hyperbolic cosine",
                  "type": "method",
                  "static": false
                },
                "exp": {
                  "name": "exp",
                  "description": "E raised to power",
                  "type": "method",
                  "static": false
                },
                "expm1": {
                  "name": "expm1",
                  "description": "E raised to power minus 1",
                  "type": "method",
                  "static": false
                },
                "floor": {
                  "name": "floor",
                  "description": "Floor (round down)",
                  "type": "method",
                  "static": false
                },
                "fround": {
                  "name": "fround",
                  "description": "Nearest single precision float",
                  "type": "method",
                  "static": false
                },
                "hypot": {
                  "name": "hypot",
                  "description": "Square root of sum of squares",
                  "type": "method",
                  "static": false
                },
                "imul": {
                  "name": "imul",
                  "description": "32-bit integer multiplication",
                  "type": "method",
                  "static": false
                },
                "log": {
                  "name": "log",
                  "description": "Natural logarithm",
                  "type": "method",
                  "static": false
                },
                "log10": {
                  "name": "log10",
                  "description": "Base 10 logarithm",
                  "type": "method",
                  "static": false
                },
                "log1p": {
                  "name": "log1p",
                  "description": "Natural logarithm of 1 + x",
                  "type": "method",
                  "static": false
                },
                "log2": {
                  "name": "log2",
                  "description": "Base 2 logarithm",
                  "type": "method",
                  "static": false
                },
                "max": {
                  "name": "max",
                  "description": "Maximum value",
                  "type": "method",
                  "static": false
                },
                "min": {
                  "name": "min",
                  "description": "Minimum value",
                  "type": "method",
                  "static": false
                },
                "pow": {
                  "name": "pow",
                  "description": "Power",
                  "type": "method",
                  "static": false
                },
                "random": {
                  "name": "random",
                  "description": "Random number between 0 and 1",
                  "type": "method",
                  "static": false
                },
                "round": {
                  "name": "round",
                  "description": "Round to nearest integer",
                  "type": "method",
                  "static": false
                },
                "sign": {
                  "name": "sign",
                  "description": "Sign of number (-1, 0, or 1)",
                  "type": "method",
                  "static": false
                },
                "sin": {
                  "name": "sin",
                  "description": "Sine",
                  "type": "method",
                  "static": false
                },
                "sinh": {
                  "name": "sinh",
                  "description": "Hyperbolic sine",
                  "type": "method",
                  "static": false
                },
                "sqrt": {
                  "name": "sqrt",
                  "description": "Square root",
                  "type": "method",
                  "static": false
                },
                "tan": {
                  "name": "tan",
                  "description": "Tangent",
                  "type": "method",
                  "static": false
                },
                "tanh": {
                  "name": "tanh",
                  "description": "Hyperbolic tangent",
                  "type": "method",
                  "static": false
                },
                "trunc": {
                  "name": "trunc",
                  "description": "Integer part (truncate decimals)",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            }
          },
          "keywords": {}
        }
      },
      "objects": {
        "Object": {
          "name": "Object",
          "category": "Built-in Objects",
          "subcategory": "Global Objects",
          "description": "The base object from which all JavaScript objects inherit.",
          "properties": {},
          "methods": {
            "assign": {
              "name": "assign",
              "description": "Copies properties from source objects to target object",
              "type": "method",
              "static": false
            },
            "create": {
              "name": "create",
              "description": "Creates a new object with specified prototype",
              "type": "method",
              "static": false
            },
            "defineProperty": {
              "name": "defineProperty",
              "description": "Defines a new property or modifies an existing property",
              "type": "method",
              "static": false
            },
            "defineProperties": {
              "name": "defineProperties",
              "description": "Defines multiple properties",
              "type": "method",
              "static": false
            },
            "entries": {
              "name": "entries",
              "description": "Returns array of key-value pairs",
              "type": "method",
              "static": false
            },
            "freeze": {
              "name": "freeze",
              "description": "Freezes an object, preventing modifications",
              "type": "method",
              "static": false
            },
            "fromEntries": {
              "name": "fromEntries",
              "description": "Creates object from array of key-value pairs",
              "type": "method",
              "static": false
            },
            "getOwnPropertyDescriptor": {
              "name": "getOwnPropertyDescriptor",
              "description": "Returns property descriptor",
              "type": "method",
              "static": false
            },
            "getOwnPropertyDescriptors": {
              "name": "getOwnPropertyDescriptors",
              "description": "Returns all property descriptors",
              "type": "method",
              "static": false
            },
            "getOwnPropertyNames": {
              "name": "getOwnPropertyNames",
              "description": "Returns array of all property names",
              "type": "method",
              "static": false
            },
            "getOwnPropertySymbols": {
              "name": "getOwnPropertySymbols",
              "description": "Returns array of symbol properties",
              "type": "method",
              "static": false
            },
            "getPrototypeOf": {
              "name": "getPrototypeOf",
              "description": "Returns the prototype of an object",
              "type": "method",
              "static": false
            },
            "hasOwnProperty": {
              "name": "hasOwnProperty",
              "description": "Tests if object has specified property",
              "type": "method",
              "static": false
            },
            "is": {
              "name": "is",
              "description": "Determines if two values are the same",
              "type": "method",
              "static": false
            },
            "isExtensible": {
              "name": "isExtensible",
              "description": "Determines if object is extensible",
              "type": "method",
              "static": false
            },
            "isFrozen": {
              "name": "isFrozen",
              "description": "Determines if object is frozen",
              "type": "method",
              "static": false
            },
            "isSealed": {
              "name": "isSealed",
              "description": "Determines if object is sealed",
              "type": "method",
              "static": false
            },
            "keys": {
              "name": "keys",
              "description": "Returns array of property names",
              "type": "method",
              "static": false
            },
            "preventExtensions": {
              "name": "preventExtensions",
              "description": "Prevents new properties from being added",
              "type": "method",
              "static": false
            },
            "seal": {
              "name": "seal",
              "description": "Seals an object, preventing new properties",
              "type": "method",
              "static": false
            },
            "setPrototypeOf": {
              "name": "setPrototypeOf",
              "description": "Sets the prototype of an object",
              "type": "method",
              "static": false
            },
            "values": {
              "name": "values",
              "description": "Returns array of property values",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Array": {
          "name": "Array",
          "category": "Built-in Objects",
          "subcategory": "Global Objects",
          "description": "Represents an array of items.",
          "properties": {
            "length": {
              "name": "length",
              "description": "Number of elements in the array",
              "type": "property"
            }
          },
          "methods": {
            "at": {
              "name": "at",
              "description": "Returns element at specified index (supports negative indices)",
              "type": "method",
              "static": false
            },
            "concat": {
              "name": "concat",
              "description": "Merges arrays and returns new array",
              "type": "method",
              "static": false
            },
            "copyWithin": {
              "name": "copyWithin",
              "description": "Copies array elements within the array",
              "type": "method",
              "static": false
            },
            "entries": {
              "name": "entries",
              "description": "Returns iterator of key-value pairs",
              "type": "method",
              "static": false
            },
            "every": {
              "name": "every",
              "description": "Tests if all elements pass the test function",
              "type": "method",
              "static": false
            },
            "fill": {
              "name": "fill",
              "description": "Fills array elements with a static value",
              "type": "method",
              "static": false
            },
            "filter": {
              "name": "filter",
              "description": "Creates new array with elements that pass the test",
              "type": "method",
              "static": false
            },
            "find": {
              "name": "find",
              "description": "Returns first element that matches the test function",
              "type": "method",
              "static": false
            },
            "findIndex": {
              "name": "findIndex",
              "description": "Returns index of first element that matches the test",
              "type": "method",
              "static": false
            },
            "findLast": {
              "name": "findLast",
              "description": "Returns last element that matches the test function",
              "type": "method",
              "static": false
            },
            "findLastIndex": {
              "name": "findLastIndex",
              "description": "Returns index of last element that matches the test",
              "type": "method",
              "static": false
            },
            "flat": {
              "name": "flat",
              "description": "Flattens nested arrays to specified depth",
              "type": "method",
              "static": false
            },
            "flatMap": {
              "name": "flatMap",
              "description": "Maps and flattens array to specified depth",
              "type": "method",
              "static": false
            },
            "forEach": {
              "name": "forEach",
              "description": "Executes function for each array element",
              "type": "method",
              "static": false
            },
            "from": {
              "name": "from",
              "description": "Creates array from array-like or iterable object",
              "type": "method",
              "static": false
            },
            "includes": {
              "name": "includes",
              "description": "Determines if array includes certain element",
              "type": "method",
              "static": false
            },
            "indexOf": {
              "name": "indexOf",
              "description": "Returns first index of specified element",
              "type": "method",
              "static": false
            },
            "isArray": {
              "name": "isArray",
              "description": "Determines if value is an array",
              "type": "method",
              "static": false
            },
            "join": {
              "name": "join",
              "description": "Joins array elements into a string",
              "type": "method",
              "static": false
            },
            "keys": {
              "name": "keys",
              "description": "Returns iterator of array indices",
              "type": "method",
              "static": false
            },
            "lastIndexOf": {
              "name": "lastIndexOf",
              "description": "Returns last index of specified element",
              "type": "method",
              "static": false
            },
            "map": {
              "name": "map",
              "description": "Creates new array with results of calling function on every element",
              "type": "method",
              "static": false
            },
            "of": {
              "name": "of",
              "description": "Creates array from variable number of arguments",
              "type": "method",
              "static": false
            },
            "pop": {
              "name": "pop",
              "description": "Removes and returns last element",
              "type": "method",
              "static": false
            },
            "push": {
              "name": "push",
              "description": "Adds elements to end of array",
              "type": "method",
              "static": false
            },
            "reduce": {
              "name": "reduce",
              "description": "Reduces array to single value (left-to-right)",
              "type": "method",
              "static": false
            },
            "reduceRight": {
              "name": "reduceRight",
              "description": "Reduces array to single value (right-to-left)",
              "type": "method",
              "static": false
            },
            "reverse": {
              "name": "reverse",
              "description": "Reverses array in place",
              "type": "method",
              "static": false
            },
            "shift": {
              "name": "shift",
              "description": "Removes and returns first element",
              "type": "method",
              "static": false
            },
            "slice": {
              "name": "slice",
              "description": "Returns shallow copy of portion of array",
              "type": "method",
              "static": false
            },
            "some": {
              "name": "some",
              "description": "Tests if at least one element passes the test",
              "type": "method",
              "static": false
            },
            "sort": {
              "name": "sort",
              "description": "Sorts array elements in place",
              "type": "method",
              "static": false
            },
            "splice": {
              "name": "splice",
              "description": "Changes array by removing/replacing/adding elements",
              "type": "method",
              "static": false
            },
            "toLocaleString": {
              "name": "toLocaleString",
              "description": "Returns localized string representation",
              "type": "method",
              "static": false
            },
            "toString": {
              "name": "toString",
              "description": "Returns string representation",
              "type": "method",
              "static": false
            },
            "unshift": {
              "name": "unshift",
              "description": "Adds elements to beginning of array",
              "type": "method",
              "static": false
            },
            "values": {
              "name": "values",
              "description": "Returns iterator of array values",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "String": {
          "name": "String",
          "category": "Built-in Objects",
          "subcategory": "Global Objects",
          "description": "Represents text data.",
          "properties": {
            "length": {
              "name": "length",
              "description": "Number of characters in the string",
              "type": "property"
            }
          },
          "methods": {
            "at": {
              "name": "at",
              "description": "Returns character at specified index (supports negative indices)",
              "type": "method",
              "static": false
            },
            "charAt": {
              "name": "charAt",
              "description": "Returns character at specified index",
              "type": "method",
              "static": false
            },
            "charCodeAt": {
              "name": "charCodeAt",
              "description": "Returns Unicode code point at specified index",
              "type": "method",
              "static": false
            },
            "codePointAt": {
              "name": "codePointAt",
              "description": "Returns Unicode code point value at specified position",
              "type": "method",
              "static": false
            },
            "concat": {
              "name": "concat",
              "description": "Concatenates strings",
              "type": "method",
              "static": false
            },
            "endsWith": {
              "name": "endsWith",
              "description": "Determines if string ends with specified substring",
              "type": "method",
              "static": false
            },
            "fromCharCode": {
              "name": "fromCharCode",
              "description": "Creates string from Unicode code points",
              "type": "method",
              "static": false
            },
            "fromCodePoint": {
              "name": "fromCodePoint",
              "description": "Creates string from Unicode code points",
              "type": "method",
              "static": false
            },
            "includes": {
              "name": "includes",
              "description": "Determines if string contains specified substring",
              "type": "method",
              "static": false
            },
            "indexOf": {
              "name": "indexOf",
              "description": "Returns index of first occurrence of substring",
              "type": "method",
              "static": false
            },
            "lastIndexOf": {
              "name": "lastIndexOf",
              "description": "Returns index of last occurrence of substring",
              "type": "method",
              "static": false
            },
            "localeCompare": {
              "name": "localeCompare",
              "description": "Compares strings according to locale",
              "type": "method",
              "static": false
            },
            "match": {
              "name": "match",
              "description": "Matches string against regular expression",
              "type": "method",
              "static": false
            },
            "matchAll": {
              "name": "matchAll",
              "description": "Returns iterator of all regex matches",
              "type": "method",
              "static": false
            },
            "normalize": {
              "name": "normalize",
              "description": "Returns Unicode normalized form of string",
              "type": "method",
              "static": false
            },
            "padEnd": {
              "name": "padEnd",
              "description": "Pads string from end to specified length",
              "type": "method",
              "static": false
            },
            "padStart": {
              "name": "padStart",
              "description": "Pads string from start to specified length",
              "type": "method",
              "static": false
            },
            "repeat": {
              "name": "repeat",
              "description": "Returns string repeated specified number of times",
              "type": "method",
              "static": false
            },
            "replace": {
              "name": "replace",
              "description": "Replaces substring with new string",
              "type": "method",
              "static": false
            },
            "replaceAll": {
              "name": "replaceAll",
              "description": "Replaces all occurrences of substring",
              "type": "method",
              "static": false
            },
            "search": {
              "name": "search",
              "description": "Searches for regex match and returns index",
              "type": "method",
              "static": false
            },
            "slice": {
              "name": "slice",
              "description": "Extracts section of string",
              "type": "method",
              "static": false
            },
            "split": {
              "name": "split",
              "description": "Splits string into array of substrings",
              "type": "method",
              "static": false
            },
            "startsWith": {
              "name": "startsWith",
              "description": "Determines if string starts with specified substring",
              "type": "method",
              "static": false
            },
            "substring": {
              "name": "substring",
              "description": "Returns substring between two indices",
              "type": "method",
              "static": false
            },
            "toLocaleLowerCase": {
              "name": "toLocaleLowerCase",
              "description": "Returns lowercase string according to locale",
              "type": "method",
              "static": false
            },
            "toLocaleUpperCase": {
              "name": "toLocaleUpperCase",
              "description": "Returns uppercase string according to locale",
              "type": "method",
              "static": false
            },
            "toLowerCase": {
              "name": "toLowerCase",
              "description": "Returns lowercase string",
              "type": "method",
              "static": false
            },
            "toString": {
              "name": "toString",
              "description": "Returns string value",
              "type": "method",
              "static": false
            },
            "toUpperCase": {
              "name": "toUpperCase",
              "description": "Returns uppercase string",
              "type": "method",
              "static": false
            },
            "trim": {
              "name": "trim",
              "description": "Removes whitespace from both ends",
              "type": "method",
              "static": false
            },
            "trimEnd": {
              "name": "trimEnd",
              "description": "Removes whitespace from end",
              "type": "method",
              "static": false
            },
            "trimStart": {
              "name": "trimStart",
              "description": "Removes whitespace from start",
              "type": "method",
              "static": false
            },
            "valueOf": {
              "name": "valueOf",
              "description": "Returns primitive string value",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Number": {
          "name": "Number",
          "category": "Built-in Objects",
          "subcategory": "Global Objects",
          "description": "Represents numeric data.",
          "properties": {
            "EPSILON": {
              "name": "EPSILON",
              "description": "Smallest representable positive number",
              "type": "property"
            },
            "MAX_SAFE_INTEGER": {
              "name": "MAX_SAFE_INTEGER",
              "description": "Maximum safe integer value",
              "type": "property"
            },
            "MAX_VALUE": {
              "name": "MAX_VALUE",
              "description": "Maximum representable positive number",
              "type": "property"
            },
            "MIN_SAFE_INTEGER": {
              "name": "MIN_SAFE_INTEGER",
              "description": "Minimum safe integer value",
              "type": "property"
            },
            "MIN_VALUE": {
              "name": "MIN_VALUE",
              "description": "Smallest representable positive number",
              "type": "property"
            },
            "NEGATIVE_INFINITY": {
              "name": "NEGATIVE_INFINITY",
              "description": "Negative infinity value",
              "type": "property"
            },
            "NaN": {
              "name": "NaN",
              "description": "\"Not a Number\" value",
              "type": "property"
            },
            "POSITIVE_INFINITY": {
              "name": "POSITIVE_INFINITY",
              "description": "Positive infinity value",
              "type": "property"
            }
          },
          "methods": {
            "isFinite": {
              "name": "isFinite",
              "description": "Determines if value is finite number",
              "type": "method",
              "static": false
            },
            "isInteger": {
              "name": "isInteger",
              "description": "Determines if value is integer",
              "type": "method",
              "static": false
            },
            "isNaN": {
              "name": "isNaN",
              "description": "Determines if value is NaN",
              "type": "method",
              "static": false
            },
            "isSafeInteger": {
              "name": "isSafeInteger",
              "description": "Determines if value is safe integer",
              "type": "method",
              "static": false
            },
            "parseFloat": {
              "name": "parseFloat",
              "description": "Parses string and returns floating point number",
              "type": "method",
              "static": false
            },
            "parseInt": {
              "name": "parseInt",
              "description": "Parses string and returns integer",
              "type": "method",
              "static": false
            },
            "toExponential": {
              "name": "toExponential",
              "description": "Returns string in exponential notation",
              "type": "method",
              "static": false
            },
            "toFixed": {
              "name": "toFixed",
              "description": "Returns string with fixed number of decimal places",
              "type": "method",
              "static": false
            },
            "toLocaleString": {
              "name": "toLocaleString",
              "description": "Returns localized string representation",
              "type": "method",
              "static": false
            },
            "toPrecision": {
              "name": "toPrecision",
              "description": "Returns string with specified precision",
              "type": "method",
              "static": false
            },
            "toString": {
              "name": "toString",
              "description": "Returns string representation",
              "type": "method",
              "static": false
            },
            "valueOf": {
              "name": "valueOf",
              "description": "Returns primitive number value",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Boolean": {
          "name": "Boolean",
          "category": "Built-in Objects",
          "subcategory": "Global Objects",
          "description": "Represents true/false values.",
          "properties": {},
          "methods": {
            "toString": {
              "name": "toString",
              "description": "Returns string representation (\"true\" or \"false\")",
              "type": "method",
              "static": false
            },
            "valueOf": {
              "name": "valueOf",
              "description": "Returns primitive boolean value",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Function": {
          "name": "Function",
          "category": "Built-in Objects",
          "subcategory": "Global Objects",
          "description": "Represents executable code.",
          "properties": {
            "length": {
              "name": "length",
              "description": "Number of expected arguments",
              "type": "property"
            },
            "name": {
              "name": "name",
              "description": "Function name",
              "type": "property"
            }
          },
          "methods": {
            "apply": {
              "name": "apply",
              "description": "Calls function with given this value and arguments array",
              "type": "method",
              "static": false
            },
            "bind": {
              "name": "bind",
              "description": "Creates new function with specified this value and arguments",
              "type": "method",
              "static": false
            },
            "call": {
              "name": "call",
              "description": "Calls function with given this value and individual arguments",
              "type": "method",
              "static": false
            },
            "toString": {
              "name": "toString",
              "description": "Returns string representation of function",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Error": {
          "name": "Error",
          "category": "Built-in Objects",
          "subcategory": "Error Objects",
          "description": "Represents runtime errors.",
          "properties": {
            "message": {
              "name": "message",
              "description": "Error description",
              "type": "property"
            },
            "name": {
              "name": "name",
              "description": "Error name",
              "type": "property"
            },
            "stack": {
              "name": "stack",
              "description": "Stack trace (non-standard but widely supported)",
              "type": "property"
            }
          },
          "methods": {
            "toString": {
              "name": "toString",
              "description": "Returns string representation of error",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "SyntaxError": {
          "name": "SyntaxError",
          "category": "Built-in Objects",
          "subcategory": "Error Objects",
          "description": "Represents syntax errors in code.",
          "properties": {
            "message": {
              "name": "message",
              "description": "Error description",
              "type": "property"
            },
            "name": {
              "name": "name",
              "description": "Error name (\"SyntaxError\")",
              "type": "property"
            }
          },
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "ReferenceError": {
          "name": "ReferenceError",
          "category": "Built-in Objects",
          "subcategory": "Error Objects",
          "description": "Represents reference errors (undefined variables).",
          "properties": {
            "message": {
              "name": "message",
              "description": "Error description",
              "type": "property"
            },
            "name": {
              "name": "name",
              "description": "Error name (\"ReferenceError\")",
              "type": "property"
            }
          },
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "TypeError": {
          "name": "TypeError",
          "category": "Built-in Objects",
          "subcategory": "Error Objects",
          "description": "Represents type errors.",
          "properties": {
            "message": {
              "name": "message",
              "description": "Error description",
              "type": "property"
            },
            "name": {
              "name": "name",
              "description": "Error name (\"TypeError\")",
              "type": "property"
            }
          },
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "RangeError": {
          "name": "RangeError",
          "category": "Built-in Objects",
          "subcategory": "Error Objects",
          "description": "Represents range errors.",
          "properties": {
            "message": {
              "name": "message",
              "description": "Error description",
              "type": "property"
            },
            "name": {
              "name": "name",
              "description": "Error name (\"RangeError\")",
              "type": "property"
            }
          },
          "methods": {},
          "staticMethods": {},
          "examples": []
        },
        "Date": {
          "name": "Date",
          "category": "Built-in Objects",
          "subcategory": "Date and Math",
          "description": "Represents dates and times.",
          "properties": {},
          "methods": {
            "getDate": {
              "name": "getDate",
              "description": "Returns day of month (1-31)",
              "type": "method",
              "static": false
            },
            "getDay": {
              "name": "getDay",
              "description": "Returns day of week (0-6)",
              "type": "method",
              "static": false
            },
            "getFullYear": {
              "name": "getFullYear",
              "description": "Returns full year",
              "type": "method",
              "static": false
            },
            "getHours": {
              "name": "getHours",
              "description": "Returns hours (0-23)",
              "type": "method",
              "static": false
            },
            "getMilliseconds": {
              "name": "getMilliseconds",
              "description": "Returns milliseconds (0-999)",
              "type": "method",
              "static": false
            },
            "getMinutes": {
              "name": "getMinutes",
              "description": "Returns minutes (0-59)",
              "type": "method",
              "static": false
            },
            "getMonth": {
              "name": "getMonth",
              "description": "Returns month (0-11)",
              "type": "method",
              "static": false
            },
            "getSeconds": {
              "name": "getSeconds",
              "description": "Returns seconds (0-59)",
              "type": "method",
              "static": false
            },
            "getTime": {
              "name": "getTime",
              "description": "Returns milliseconds since epoch",
              "type": "method",
              "static": false
            },
            "getTimezoneOffset": {
              "name": "getTimezoneOffset",
              "description": "Returns timezone offset in minutes",
              "type": "method",
              "static": false
            },
            "setDate": {
              "name": "setDate",
              "description": "Sets day of month",
              "type": "method",
              "static": false
            },
            "setFullYear": {
              "name": "setFullYear",
              "description": "Sets full year",
              "type": "method",
              "static": false
            },
            "setHours": {
              "name": "setHours",
              "description": "Sets hours",
              "type": "method",
              "static": false
            },
            "setMilliseconds": {
              "name": "setMilliseconds",
              "description": "Sets milliseconds",
              "type": "method",
              "static": false
            },
            "setMinutes": {
              "name": "setMinutes",
              "description": "Sets minutes",
              "type": "method",
              "static": false
            },
            "setMonth": {
              "name": "setMonth",
              "description": "Sets month",
              "type": "method",
              "static": false
            },
            "setSeconds": {
              "name": "setSeconds",
              "description": "Sets seconds",
              "type": "method",
              "static": false
            },
            "setTime": {
              "name": "setTime",
              "description": "Sets time by milliseconds since epoch",
              "type": "method",
              "static": false
            },
            "toDateString": {
              "name": "toDateString",
              "description": "Returns date portion as string",
              "type": "method",
              "static": false
            },
            "toISOString": {
              "name": "toISOString",
              "description": "Returns ISO 8601 string",
              "type": "method",
              "static": false
            },
            "toJSON": {
              "name": "toJSON",
              "description": "Returns JSON representation",
              "type": "method",
              "static": false
            },
            "toLocaleDateString": {
              "name": "toLocaleDateString",
              "description": "Returns localized date string",
              "type": "method",
              "static": false
            },
            "toLocaleString": {
              "name": "toLocaleString",
              "description": "Returns localized date/time string",
              "type": "method",
              "static": false
            },
            "toLocaleTimeString": {
              "name": "toLocaleTimeString",
              "description": "Returns localized time string",
              "type": "method",
              "static": false
            },
            "toString": {
              "name": "toString",
              "description": "Returns string representation",
              "type": "method",
              "static": false
            },
            "toTimeString": {
              "name": "toTimeString",
              "description": "Returns time portion as string",
              "type": "method",
              "static": false
            },
            "toUTCString": {
              "name": "toUTCString",
              "description": "Returns UTC string",
              "type": "method",
              "static": false
            },
            "valueOf": {
              "name": "valueOf",
              "description": "Returns primitive number value",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {
            "now": {
              "name": "now",
              "description": "Returns current timestamp",
              "type": "static method",
              "static": true
            },
            "parse": {
              "name": "parse",
              "description": "Parses date string",
              "type": "static method",
              "static": true
            }
          },
          "examples": []
        },
        "Math": {
          "name": "Math",
          "category": "Built-in Objects",
          "subcategory": "Date and Math",
          "description": "Provides mathematical constants and functions.",
          "properties": {
            "E": {
              "name": "E",
              "description": "Euler's number",
              "type": "property"
            },
            "LN10": {
              "name": "LN10",
              "description": "Natural logarithm of 10",
              "type": "property"
            },
            "LN2": {
              "name": "LN2",
              "description": "Natural logarithm of 2",
              "type": "property"
            },
            "LOG10E": {
              "name": "LOG10E",
              "description": "Base 10 logarithm of E",
              "type": "property"
            },
            "LOG2E": {
              "name": "LOG2E",
              "description": "Base 2 logarithm of E",
              "type": "property"
            },
            "PI": {
              "name": "PI",
              "description": "Pi constant",
              "type": "property"
            },
            "SQRT1_2": {
              "name": "SQRT1_2",
              "description": "Square root of 1/2",
              "type": "property"
            },
            "SQRT2": {
              "name": "SQRT2",
              "description": "Square root of 2",
              "type": "property"
            }
          },
          "methods": {
            "abs": {
              "name": "abs",
              "description": "Absolute value",
              "type": "method",
              "static": false
            },
            "acos": {
              "name": "acos",
              "description": "Arccosine",
              "type": "method",
              "static": false
            },
            "acosh": {
              "name": "acosh",
              "description": "Hyperbolic arccosine",
              "type": "method",
              "static": false
            },
            "asin": {
              "name": "asin",
              "description": "Arcsine",
              "type": "method",
              "static": false
            },
            "asinh": {
              "name": "asinh",
              "description": "Hyperbolic arcsine",
              "type": "method",
              "static": false
            },
            "atan": {
              "name": "atan",
              "description": "Arctangent",
              "type": "method",
              "static": false
            },
            "atan2": {
              "name": "atan2",
              "description": "Arctangent of y/x",
              "type": "method",
              "static": false
            },
            "atanh": {
              "name": "atanh",
              "description": "Hyperbolic arctangent",
              "type": "method",
              "static": false
            },
            "cbrt": {
              "name": "cbrt",
              "description": "Cube root",
              "type": "method",
              "static": false
            },
            "ceil": {
              "name": "ceil",
              "description": "Ceiling (round up)",
              "type": "method",
              "static": false
            },
            "clz32": {
              "name": "clz32",
              "description": "Number of leading zero bits in 32-bit binary",
              "type": "method",
              "static": false
            },
            "cos": {
              "name": "cos",
              "description": "Cosine",
              "type": "method",
              "static": false
            },
            "cosh": {
              "name": "cosh",
              "description": "Hyperbolic cosine",
              "type": "method",
              "static": false
            },
            "exp": {
              "name": "exp",
              "description": "E raised to power",
              "type": "method",
              "static": false
            },
            "expm1": {
              "name": "expm1",
              "description": "E raised to power minus 1",
              "type": "method",
              "static": false
            },
            "floor": {
              "name": "floor",
              "description": "Floor (round down)",
              "type": "method",
              "static": false
            },
            "fround": {
              "name": "fround",
              "description": "Nearest single precision float",
              "type": "method",
              "static": false
            },
            "hypot": {
              "name": "hypot",
              "description": "Square root of sum of squares",
              "type": "method",
              "static": false
            },
            "imul": {
              "name": "imul",
              "description": "32-bit integer multiplication",
              "type": "method",
              "static": false
            },
            "log": {
              "name": "log",
              "description": "Natural logarithm",
              "type": "method",
              "static": false
            },
            "log10": {
              "name": "log10",
              "description": "Base 10 logarithm",
              "type": "method",
              "static": false
            },
            "log1p": {
              "name": "log1p",
              "description": "Natural logarithm of 1 + x",
              "type": "method",
              "static": false
            },
            "log2": {
              "name": "log2",
              "description": "Base 2 logarithm",
              "type": "method",
              "static": false
            },
            "max": {
              "name": "max",
              "description": "Maximum value",
              "type": "method",
              "static": false
            },
            "min": {
              "name": "min",
              "description": "Minimum value",
              "type": "method",
              "static": false
            },
            "pow": {
              "name": "pow",
              "description": "Power",
              "type": "method",
              "static": false
            },
            "random": {
              "name": "random",
              "description": "Random number between 0 and 1",
              "type": "method",
              "static": false
            },
            "round": {
              "name": "round",
              "description": "Round to nearest integer",
              "type": "method",
              "static": false
            },
            "sign": {
              "name": "sign",
              "description": "Sign of number (-1, 0, or 1)",
              "type": "method",
              "static": false
            },
            "sin": {
              "name": "sin",
              "description": "Sine",
              "type": "method",
              "static": false
            },
            "sinh": {
              "name": "sinh",
              "description": "Hyperbolic sine",
              "type": "method",
              "static": false
            },
            "sqrt": {
              "name": "sqrt",
              "description": "Square root",
              "type": "method",
              "static": false
            },
            "tan": {
              "name": "tan",
              "description": "Tangent",
              "type": "method",
              "static": false
            },
            "tanh": {
              "name": "tanh",
              "description": "Hyperbolic tangent",
              "type": "method",
              "static": false
            },
            "trunc": {
              "name": "trunc",
              "description": "Integer part (truncate decimals)",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        }
      },
      "keywords": {}
    },
    "Collections": {
      "name": "Collections",
      "subcategories": {},
      "objects": {
        "Map": {
          "name": "Map",
          "category": "Collections",
          "subcategory": null,
          "description": "Represents a collection of key-value pairs.",
          "properties": {
            "size": {
              "name": "size",
              "description": "Number of entries in the map",
              "type": "property"
            }
          },
          "methods": {
            "clear": {
              "name": "clear",
              "description": "Removes all entries",
              "type": "method",
              "static": false
            },
            "delete": {
              "name": "delete",
              "description": "Removes entry with specified key",
              "type": "method",
              "static": false
            },
            "entries": {
              "name": "entries",
              "description": "Returns iterator of key-value pairs",
              "type": "method",
              "static": false
            },
            "forEach": {
              "name": "forEach",
              "description": "Executes function for each entry",
              "type": "method",
              "static": false
            },
            "get": {
              "name": "get",
              "description": "Returns value for specified key",
              "type": "method",
              "static": false
            },
            "has": {
              "name": "has",
              "description": "Tests if key exists in map",
              "type": "method",
              "static": false
            },
            "keys": {
              "name": "keys",
              "description": "Returns iterator of keys",
              "type": "method",
              "static": false
            },
            "set": {
              "name": "set",
              "description": "Sets value for specified key",
              "type": "method",
              "static": false
            },
            "values": {
              "name": "values",
              "description": "Returns iterator of values",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Set": {
          "name": "Set",
          "category": "Collections",
          "subcategory": null,
          "description": "Represents a collection of unique values.",
          "properties": {
            "size": {
              "name": "size",
              "description": "Number of values in the set",
              "type": "property"
            }
          },
          "methods": {
            "add": {
              "name": "add",
              "description": "Adds value to set",
              "type": "method",
              "static": false
            },
            "clear": {
              "name": "clear",
              "description": "Removes all values",
              "type": "method",
              "static": false
            },
            "delete": {
              "name": "delete",
              "description": "Removes specified value",
              "type": "method",
              "static": false
            },
            "entries": {
              "name": "entries",
              "description": "Returns iterator of value-value pairs",
              "type": "method",
              "static": false
            },
            "forEach": {
              "name": "forEach",
              "description": "Executes function for each value",
              "type": "method",
              "static": false
            },
            "has": {
              "name": "has",
              "description": "Tests if value exists in set",
              "type": "method",
              "static": false
            },
            "keys": {
              "name": "keys",
              "description": "Returns iterator of values (same as values())",
              "type": "method",
              "static": false
            },
            "values": {
              "name": "values",
              "description": "Returns iterator of values",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "WeakMap": {
          "name": "WeakMap",
          "category": "Collections",
          "subcategory": null,
          "description": "Represents a collection of key-value pairs with weak references.",
          "properties": {},
          "methods": {
            "delete": {
              "name": "delete",
              "description": "Removes entry with specified key",
              "type": "method",
              "static": false
            },
            "get": {
              "name": "get",
              "description": "Returns value for specified key",
              "type": "method",
              "static": false
            },
            "has": {
              "name": "has",
              "description": "Tests if key exists in map",
              "type": "method",
              "static": false
            },
            "set": {
              "name": "set",
              "description": "Sets value for specified key",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "WeakSet": {
          "name": "WeakSet",
          "category": "Collections",
          "subcategory": null,
          "description": "Represents a collection of unique objects with weak references.",
          "properties": {},
          "methods": {
            "add": {
              "name": "add",
              "description": "Adds object to set",
              "type": "method",
              "static": false
            },
            "delete": {
              "name": "delete",
              "description": "Removes specified object",
              "type": "method",
              "static": false
            },
            "has": {
              "name": "has",
              "description": "Tests if object exists in set",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        }
      },
      "keywords": {}
    },
    "Promises and Async": {
      "name": "Promises and Async",
      "subcategories": {},
      "objects": {
        "Promise": {
          "name": "Promise",
          "category": "Promises and Async",
          "subcategory": null,
          "description": "Represents eventual completion or failure of asynchronous operation.",
          "properties": {},
          "methods": {
            "all": {
              "name": "all",
              "description": "Waits for all promises to resolve",
              "type": "method",
              "static": false
            },
            "allSettled": {
              "name": "allSettled",
              "description": "Waits for all promises to settle (resolve or reject)",
              "type": "method",
              "static": false
            },
            "any": {
              "name": "any",
              "description": "Resolves when any promise resolves",
              "type": "method",
              "static": false
            },
            "catch": {
              "name": "catch",
              "description": "Handles promise rejection",
              "type": "method",
              "static": false
            },
            "finally": {
              "name": "finally",
              "description": "Executes code regardless of promise outcome",
              "type": "method",
              "static": false
            },
            "race": {
              "name": "race",
              "description": "Resolves when first promise settles",
              "type": "method",
              "static": false
            },
            "then": {
              "name": "then",
              "description": "Handles promise resolution",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {
            "reject": {
              "name": "reject",
              "description": "Creates rejected promise",
              "type": "static method",
              "static": true
            },
            "resolve": {
              "name": "resolve",
              "description": "Creates resolved promise",
              "type": "static method",
              "static": true
            }
          },
          "examples": []
        }
      },
      "keywords": {}
    },
    "ES6+ Modern Features": {
      "name": "ES6+ Modern Features",
      "subcategories": {
        "Symbols and Primitives": {
          "name": "Symbols and Primitives",
          "objects": {
            "Symbol": {
              "name": "Symbol",
              "category": "ES6+ Modern Features",
              "subcategory": "Symbols and Primitives",
              "description": "Represents a unique identifier that can be used as object keys.",
              "properties": {
                "description": {
                  "name": "description",
                  "description": "Optional description of the symbol",
                  "type": "property"
                },
                "iterator": {
                  "name": "iterator",
                  "description": "Well-known symbol for iteration protocol",
                  "type": "property"
                },
                "asyncIterator": {
                  "name": "asyncIterator",
                  "description": "Well-known symbol for async iteration protocol",
                  "type": "property"
                },
                "toStringTag": {
                  "name": "toStringTag",
                  "description": "Well-known symbol for default object description",
                  "type": "property"
                }
              },
              "methods": {
                "for": {
                  "name": "for",
                  "description": "Searches for existing symbol in global registry",
                  "type": "method",
                  "static": false
                },
                "keyFor": {
                  "name": "keyFor",
                  "description": "Returns key for globally registered symbol",
                  "type": "method",
                  "static": false
                },
                "toString": {
                  "name": "toString",
                  "description": "Returns string representation of symbol",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "BigInt": {
              "name": "BigInt",
              "category": "ES6+ Modern Features",
              "subcategory": "Symbols and Primitives",
              "description": "Represents arbitrarily large integers beyond Number.MAX_SAFE_INTEGER.",
              "properties": {},
              "methods": {
                "asIntN": {
                  "name": "asIntN",
                  "description": "Wraps BigInt value to signed integer",
                  "type": "method",
                  "static": false
                },
                "asUintN": {
                  "name": "asUintN",
                  "description": "Wraps BigInt value to unsigned integer",
                  "type": "method",
                  "static": false
                },
                "toString": {
                  "name": "toString",
                  "description": "Returns string representation",
                  "type": "method",
                  "static": false
                },
                "valueOf": {
                  "name": "valueOf",
                  "description": "Returns primitive BigInt value",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            }
          },
          "keywords": {}
        },
        "Reflection and Metaprogramming": {
          "name": "Reflection and Metaprogramming",
          "objects": {
            "Proxy": {
              "name": "Proxy",
              "category": "ES6+ Modern Features",
              "subcategory": "Reflection and Metaprogramming",
              "description": "Enables creation of proxy objects to intercept and customize operations.",
              "properties": {},
              "methods": {
                "revocable": {
                  "name": "revocable",
                  "description": "Creates revocable proxy object",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "Reflect": {
              "name": "Reflect",
              "category": "ES6+ Modern Features",
              "subcategory": "Reflection and Metaprogramming",
              "description": "Provides methods for interceptable JavaScript operations.",
              "properties": {},
              "methods": {
                "apply": {
                  "name": "apply",
                  "description": "Calls target function with specified arguments",
                  "type": "method",
                  "static": false
                },
                "construct": {
                  "name": "construct",
                  "description": "Acts like new operator as function",
                  "type": "method",
                  "static": false
                },
                "defineProperty": {
                  "name": "defineProperty",
                  "description": "Defines property on object",
                  "type": "method",
                  "static": false
                },
                "deleteProperty": {
                  "name": "deleteProperty",
                  "description": "Deletes property from object",
                  "type": "method",
                  "static": false
                },
                "get": {
                  "name": "get",
                  "description": "Gets property value from object",
                  "type": "method",
                  "static": false
                },
                "getOwnPropertyDescriptor": {
                  "name": "getOwnPropertyDescriptor",
                  "description": "Gets property descriptor",
                  "type": "method",
                  "static": false
                },
                "getPrototypeOf": {
                  "name": "getPrototypeOf",
                  "description": "Gets prototype of object",
                  "type": "method",
                  "static": false
                },
                "has": {
                  "name": "has",
                  "description": "Checks if property exists in object",
                  "type": "method",
                  "static": false
                },
                "isExtensible": {
                  "name": "isExtensible",
                  "description": "Checks if object is extensible",
                  "type": "method",
                  "static": false
                },
                "ownKeys": {
                  "name": "ownKeys",
                  "description": "Returns array of object's own property keys",
                  "type": "method",
                  "static": false
                },
                "preventExtensions": {
                  "name": "preventExtensions",
                  "description": "Prevents new properties from being added",
                  "type": "method",
                  "static": false
                },
                "set": {
                  "name": "set",
                  "description": "Sets property value on object",
                  "type": "method",
                  "static": false
                },
                "setPrototypeOf": {
                  "name": "setPrototypeOf",
                  "description": "Sets prototype of object",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            }
          },
          "keywords": {}
        },
        "Iterators and Generators": {
          "name": "Iterators and Generators",
          "objects": {
            "Iterator": {
              "name": "Iterator",
              "category": "ES6+ Modern Features",
              "subcategory": "Iterators and Generators",
              "description": "Base interface for objects that implement iteration protocol.",
              "properties": {},
              "methods": {
                "next": {
                  "name": "next",
                  "description": "Returns next value in iteration sequence",
                  "type": "method",
                  "static": false
                },
                "return": {
                  "name": "return",
                  "description": "Terminates iterator and returns given value",
                  "type": "method",
                  "static": false
                },
                "throw": {
                  "name": "throw",
                  "description": "Throws error into iterator",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "Generator": {
              "name": "Generator",
              "category": "ES6+ Modern Features",
              "subcategory": "Iterators and Generators",
              "description": "Special type of iterator created by generator functions.",
              "properties": {},
              "methods": {
                "next": {
                  "name": "next",
                  "description": "Resumes execution and returns next yielded value",
                  "type": "method",
                  "static": false
                },
                "return": {
                  "name": "return",
                  "description": "Forces generator to return given value",
                  "type": "method",
                  "static": false
                },
                "throw": {
                  "name": "throw",
                  "description": "Throws exception into generator",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            }
          },
          "keywords": {}
        }
      },
      "objects": {
        "Symbol": {
          "name": "Symbol",
          "category": "ES6+ Modern Features",
          "subcategory": "Symbols and Primitives",
          "description": "Represents a unique identifier that can be used as object keys.",
          "properties": {
            "description": {
              "name": "description",
              "description": "Optional description of the symbol",
              "type": "property"
            },
            "iterator": {
              "name": "iterator",
              "description": "Well-known symbol for iteration protocol",
              "type": "property"
            },
            "asyncIterator": {
              "name": "asyncIterator",
              "description": "Well-known symbol for async iteration protocol",
              "type": "property"
            },
            "toStringTag": {
              "name": "toStringTag",
              "description": "Well-known symbol for default object description",
              "type": "property"
            }
          },
          "methods": {
            "for": {
              "name": "for",
              "description": "Searches for existing symbol in global registry",
              "type": "method",
              "static": false
            },
            "keyFor": {
              "name": "keyFor",
              "description": "Returns key for globally registered symbol",
              "type": "method",
              "static": false
            },
            "toString": {
              "name": "toString",
              "description": "Returns string representation of symbol",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "BigInt": {
          "name": "BigInt",
          "category": "ES6+ Modern Features",
          "subcategory": "Symbols and Primitives",
          "description": "Represents arbitrarily large integers beyond Number.MAX_SAFE_INTEGER.",
          "properties": {},
          "methods": {
            "asIntN": {
              "name": "asIntN",
              "description": "Wraps BigInt value to signed integer",
              "type": "method",
              "static": false
            },
            "asUintN": {
              "name": "asUintN",
              "description": "Wraps BigInt value to unsigned integer",
              "type": "method",
              "static": false
            },
            "toString": {
              "name": "toString",
              "description": "Returns string representation",
              "type": "method",
              "static": false
            },
            "valueOf": {
              "name": "valueOf",
              "description": "Returns primitive BigInt value",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Proxy": {
          "name": "Proxy",
          "category": "ES6+ Modern Features",
          "subcategory": "Reflection and Metaprogramming",
          "description": "Enables creation of proxy objects to intercept and customize operations.",
          "properties": {},
          "methods": {
            "revocable": {
              "name": "revocable",
              "description": "Creates revocable proxy object",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Reflect": {
          "name": "Reflect",
          "category": "ES6+ Modern Features",
          "subcategory": "Reflection and Metaprogramming",
          "description": "Provides methods for interceptable JavaScript operations.",
          "properties": {},
          "methods": {
            "apply": {
              "name": "apply",
              "description": "Calls target function with specified arguments",
              "type": "method",
              "static": false
            },
            "construct": {
              "name": "construct",
              "description": "Acts like new operator as function",
              "type": "method",
              "static": false
            },
            "defineProperty": {
              "name": "defineProperty",
              "description": "Defines property on object",
              "type": "method",
              "static": false
            },
            "deleteProperty": {
              "name": "deleteProperty",
              "description": "Deletes property from object",
              "type": "method",
              "static": false
            },
            "get": {
              "name": "get",
              "description": "Gets property value from object",
              "type": "method",
              "static": false
            },
            "getOwnPropertyDescriptor": {
              "name": "getOwnPropertyDescriptor",
              "description": "Gets property descriptor",
              "type": "method",
              "static": false
            },
            "getPrototypeOf": {
              "name": "getPrototypeOf",
              "description": "Gets prototype of object",
              "type": "method",
              "static": false
            },
            "has": {
              "name": "has",
              "description": "Checks if property exists in object",
              "type": "method",
              "static": false
            },
            "isExtensible": {
              "name": "isExtensible",
              "description": "Checks if object is extensible",
              "type": "method",
              "static": false
            },
            "ownKeys": {
              "name": "ownKeys",
              "description": "Returns array of object's own property keys",
              "type": "method",
              "static": false
            },
            "preventExtensions": {
              "name": "preventExtensions",
              "description": "Prevents new properties from being added",
              "type": "method",
              "static": false
            },
            "set": {
              "name": "set",
              "description": "Sets property value on object",
              "type": "method",
              "static": false
            },
            "setPrototypeOf": {
              "name": "setPrototypeOf",
              "description": "Sets prototype of object",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Iterator": {
          "name": "Iterator",
          "category": "ES6+ Modern Features",
          "subcategory": "Iterators and Generators",
          "description": "Base interface for objects that implement iteration protocol.",
          "properties": {},
          "methods": {
            "next": {
              "name": "next",
              "description": "Returns next value in iteration sequence",
              "type": "method",
              "static": false
            },
            "return": {
              "name": "return",
              "description": "Terminates iterator and returns given value",
              "type": "method",
              "static": false
            },
            "throw": {
              "name": "throw",
              "description": "Throws error into iterator",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Generator": {
          "name": "Generator",
          "category": "ES6+ Modern Features",
          "subcategory": "Iterators and Generators",
          "description": "Special type of iterator created by generator functions.",
          "properties": {},
          "methods": {
            "next": {
              "name": "next",
              "description": "Resumes execution and returns next yielded value",
              "type": "method",
              "static": false
            },
            "return": {
              "name": "return",
              "description": "Forces generator to return given value",
              "type": "method",
              "static": false
            },
            "throw": {
              "name": "throw",
              "description": "Throws exception into generator",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        }
      },
      "keywords": {}
    },
    "Web APIs": {
      "name": "Web APIs",
      "subcategories": {
        "DOM Manipulation": {
          "name": "DOM Manipulation",
          "objects": {
            "Document": {
              "name": "Document",
              "category": "Web APIs",
              "subcategory": "DOM Manipulation",
              "description": "Represents the HTML document and provides access to DOM tree.",
              "properties": {
                "body": {
                  "name": "body",
                  "description": "Reference to document body element",
                  "type": "property"
                },
                "head": {
                  "name": "head",
                  "description": "Reference to document head element",
                  "type": "property"
                },
                "title": {
                  "name": "title",
                  "description": "Document title",
                  "type": "property"
                },
                "URL": {
                  "name": "URL",
                  "description": "Document URL",
                  "type": "property"
                },
                "domain": {
                  "name": "domain",
                  "description": "Document domain",
                  "type": "property"
                },
                "cookie": {
                  "name": "cookie",
                  "description": "Document cookies",
                  "type": "property"
                },
                "readyState": {
                  "name": "readyState",
                  "description": "Document loading state",
                  "type": "property"
                }
              },
              "methods": {
                "createElement": {
                  "name": "createElement",
                  "description": "Creates new HTML element",
                  "type": "method",
                  "static": false
                },
                "createTextNode": {
                  "name": "createTextNode",
                  "description": "Creates new text node",
                  "type": "method",
                  "static": false
                },
                "getElementById": {
                  "name": "getElementById",
                  "description": "Gets element by ID",
                  "type": "method",
                  "static": false
                },
                "getElementsByClassName": {
                  "name": "getElementsByClassName",
                  "description": "Gets elements by class name",
                  "type": "method",
                  "static": false
                },
                "getElementsByTagName": {
                  "name": "getElementsByTagName",
                  "description": "Gets elements by tag name",
                  "type": "method",
                  "static": false
                },
                "querySelector": {
                  "name": "querySelector",
                  "description": "Gets first element matching CSS selector",
                  "type": "method",
                  "static": false
                },
                "querySelectorAll": {
                  "name": "querySelectorAll",
                  "description": "Gets all elements matching CSS selector",
                  "type": "method",
                  "static": false
                },
                "addEventListener": {
                  "name": "addEventListener",
                  "description": "Adds event listener to document",
                  "type": "method",
                  "static": false
                },
                "removeEventListener": {
                  "name": "removeEventListener",
                  "description": "Removes event listener from document",
                  "type": "method",
                  "static": false
                },
                "write": {
                  "name": "write",
                  "description": "Writes HTML to document",
                  "type": "method",
                  "static": false
                },
                "writeln": {
                  "name": "writeln",
                  "description": "Writes HTML to document with newline",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "Element": {
              "name": "Element",
              "category": "Web APIs",
              "subcategory": "DOM Manipulation",
              "description": "Represents an HTML element in the DOM tree.",
              "properties": {
                "innerHTML": {
                  "name": "innerHTML",
                  "description": "HTML content of element",
                  "type": "property"
                },
                "textContent": {
                  "name": "textContent",
                  "description": "Text content of element",
                  "type": "property"
                },
                "classList": {
                  "name": "classList",
                  "description": "DOMTokenList of element classes",
                  "type": "property"
                },
                "className": {
                  "name": "className",
                  "description": "Class attribute as string",
                  "type": "property"
                },
                "id": {
                  "name": "id",
                  "description": "ID attribute",
                  "type": "property"
                },
                "tagName": {
                  "name": "tagName",
                  "description": "Tag name in uppercase",
                  "type": "property"
                },
                "parentNode": {
                  "name": "parentNode",
                  "description": "Parent element",
                  "type": "property"
                },
                "children": {
                  "name": "children",
                  "description": "Child elements",
                  "type": "property"
                },
                "firstChild": {
                  "name": "firstChild",
                  "description": "First child node",
                  "type": "property"
                },
                "lastChild": {
                  "name": "lastChild",
                  "description": "Last child node",
                  "type": "property"
                },
                "nextSibling": {
                  "name": "nextSibling",
                  "description": "Next sibling node",
                  "type": "property"
                },
                "previousSibling": {
                  "name": "previousSibling",
                  "description": "Previous sibling node",
                  "type": "property"
                }
              },
              "methods": {
                "appendChild": {
                  "name": "appendChild",
                  "description": "Adds child element",
                  "type": "method",
                  "static": false
                },
                "removeChild": {
                  "name": "removeChild",
                  "description": "Removes child element",
                  "type": "method",
                  "static": false
                },
                "insertBefore": {
                  "name": "insertBefore",
                  "description": "Inserts element before specified child",
                  "type": "method",
                  "static": false
                },
                "cloneNode": {
                  "name": "cloneNode",
                  "description": "Creates copy of element",
                  "type": "method",
                  "static": false
                },
                "getAttribute": {
                  "name": "getAttribute",
                  "description": "Gets attribute value",
                  "type": "method",
                  "static": false
                },
                "setAttribute": {
                  "name": "setAttribute",
                  "description": "Sets attribute value",
                  "type": "method",
                  "static": false
                },
                "removeAttribute": {
                  "name": "removeAttribute",
                  "description": "Removes attribute",
                  "type": "method",
                  "static": false
                },
                "hasAttribute": {
                  "name": "hasAttribute",
                  "description": "Checks if attribute exists",
                  "type": "method",
                  "static": false
                },
                "addEventListener": {
                  "name": "addEventListener",
                  "description": "Adds event listener",
                  "type": "method",
                  "static": false
                },
                "removeEventListener": {
                  "name": "removeEventListener",
                  "description": "Removes event listener",
                  "type": "method",
                  "static": false
                },
                "querySelector": {
                  "name": "querySelector",
                  "description": "Gets descendant element matching selector",
                  "type": "method",
                  "static": false
                },
                "querySelectorAll": {
                  "name": "querySelectorAll",
                  "description": "Gets all descendant elements matching selector",
                  "type": "method",
                  "static": false
                },
                "closest": {
                  "name": "closest",
                  "description": "Gets closest ancestor matching selector",
                  "type": "method",
                  "static": false
                },
                "matches": {
                  "name": "matches",
                  "description": "Tests if element matches selector",
                  "type": "method",
                  "static": false
                },
                "focus": {
                  "name": "focus",
                  "description": "Sets focus to element",
                  "type": "method",
                  "static": false
                },
                "blur": {
                  "name": "blur",
                  "description": "Removes focus from element",
                  "type": "method",
                  "static": false
                },
                "click": {
                  "name": "click",
                  "description": "Simulates mouse click",
                  "type": "method",
                  "static": false
                },
                "scroll": {
                  "name": "scroll",
                  "description": "Scrolls element content",
                  "type": "method",
                  "static": false
                },
                "scrollIntoView": {
                  "name": "scrollIntoView",
                  "description": "Scrolls element into view",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            }
          },
          "keywords": {}
        },
        "Network APIs": {
          "name": "Network APIs",
          "objects": {
            "Response": {
              "name": "Response",
              "category": "Web APIs",
              "subcategory": "Network APIs",
              "description": "Represents response to fetch request.",
              "properties": {
                "ok": {
                  "name": "ok",
                  "description": "Whether response was successful",
                  "type": "property"
                },
                "status": {
                  "name": "status",
                  "description": "HTTP status code",
                  "type": "property"
                },
                "statusText": {
                  "name": "statusText",
                  "description": "HTTP status message",
                  "type": "property"
                },
                "headers": {
                  "name": "headers",
                  "description": "Response headers",
                  "type": "property"
                },
                "url": {
                  "name": "url",
                  "description": "Response URL",
                  "type": "property"
                },
                "redirected": {
                  "name": "redirected",
                  "description": "Whether response is result of redirect",
                  "type": "property"
                }
              },
              "methods": {
                "json": {
                  "name": "json",
                  "description": "Parses response body as JSON",
                  "type": "method",
                  "static": false
                },
                "text": {
                  "name": "text",
                  "description": "Parses response body as text",
                  "type": "method",
                  "static": false
                },
                "blob": {
                  "name": "blob",
                  "description": "Parses response body as Blob",
                  "type": "method",
                  "static": false
                },
                "arrayBuffer": {
                  "name": "arrayBuffer",
                  "description": "Parses response body as ArrayBuffer",
                  "type": "method",
                  "static": false
                },
                "formData": {
                  "name": "formData",
                  "description": "Parses response body as FormData",
                  "type": "method",
                  "static": false
                },
                "clone": {
                  "name": "clone",
                  "description": "Creates copy of response",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "WebSocket": {
              "name": "WebSocket",
              "category": "Web APIs",
              "subcategory": "Network APIs",
              "description": "Provides full-duplex communication over single TCP connection.",
              "properties": {
                "url": {
                  "name": "url",
                  "description": "WebSocket URL",
                  "type": "property"
                },
                "readyState": {
                  "name": "readyState",
                  "description": "Connection state",
                  "type": "property"
                },
                "protocol": {
                  "name": "protocol",
                  "description": "Selected protocol",
                  "type": "property"
                },
                "binaryType": {
                  "name": "binaryType",
                  "description": "Type for binary data",
                  "type": "property"
                },
                "onopen": {
                  "name": "onopen",
                  "description": "Connection opened",
                  "type": "property"
                },
                "onmessage": {
                  "name": "onmessage",
                  "description": "Message received",
                  "type": "property"
                },
                "onerror": {
                  "name": "onerror",
                  "description": "Error occurred",
                  "type": "property"
                },
                "onclose": {
                  "name": "onclose",
                  "description": "Connection closed",
                  "type": "property"
                }
              },
              "methods": {
                "send": {
                  "name": "send",
                  "description": "Sends data through WebSocket",
                  "type": "method",
                  "static": false
                },
                "close": {
                  "name": "close",
                  "description": "Closes WebSocket connection",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            }
          },
          "keywords": {
            "fetch": {
              "name": "fetch",
              "category": "Web APIs",
              "subcategory": "Network APIs",
              "description": "Modern API for making HTTP requests.",
              "attributes": {
                "fetch": {
                  "name": "fetch",
                  "description": "Makes HTTP request and returns Promise",
                  "type": "attribute"
                },
                "url": {
                  "name": "url",
                  "description": "Request URL",
                  "type": "attribute"
                },
                "method": {
                  "name": "method",
                  "description": "HTTP method",
                  "type": "attribute"
                },
                "headers": {
                  "name": "headers",
                  "description": "Request headers",
                  "type": "attribute"
                },
                "body": {
                  "name": "body",
                  "description": "Request body",
                  "type": "attribute"
                },
                "mode": {
                  "name": "mode",
                  "description": "Request mode (cors, no-cors, same-origin)",
                  "type": "attribute"
                },
                "credentials": {
                  "name": "credentials",
                  "description": "Request credentials (omit, same-origin, include)",
                  "type": "attribute"
                }
              },
              "examples": []
            }
          }
        },
        "Storage APIs": {
          "name": "Storage APIs",
          "objects": {},
          "keywords": {
            "localStorage": {
              "name": "localStorage",
              "category": "Web APIs",
              "subcategory": "Storage APIs",
              "description": "Provides access to local storage for the domain.",
              "attributes": {
                "setItem": {
                  "name": "setItem",
                  "description": "Stores item in local storage",
                  "type": "attribute"
                },
                "getItem": {
                  "name": "getItem",
                  "description": "Retrieves item from local storage",
                  "type": "attribute"
                },
                "removeItem": {
                  "name": "removeItem",
                  "description": "Removes item from local storage",
                  "type": "attribute"
                },
                "clear": {
                  "name": "clear",
                  "description": "Removes all items from local storage",
                  "type": "attribute"
                },
                "key": {
                  "name": "key",
                  "description": "Gets key at specified index",
                  "type": "attribute"
                },
                "length": {
                  "name": "length",
                  "description": "Number of items in storage",
                  "type": "attribute"
                }
              },
              "examples": []
            },
            "sessionStorage": {
              "name": "sessionStorage",
              "category": "Web APIs",
              "subcategory": "Storage APIs",
              "description": "Provides access to session storage for the domain.",
              "attributes": {
                "setItem": {
                  "name": "setItem",
                  "description": "Stores item in session storage",
                  "type": "attribute"
                },
                "getItem": {
                  "name": "getItem",
                  "description": "Retrieves item from session storage",
                  "type": "attribute"
                },
                "removeItem": {
                  "name": "removeItem",
                  "description": "Removes item from session storage",
                  "type": "attribute"
                },
                "clear": {
                  "name": "clear",
                  "description": "Removes all items from session storage",
                  "type": "attribute"
                },
                "key": {
                  "name": "key",
                  "description": "Gets key at specified index",
                  "type": "attribute"
                },
                "length": {
                  "name": "length",
                  "description": "Number of items in storage",
                  "type": "attribute"
                }
              },
              "examples": []
            }
          }
        },
        "Multimedia APIs": {
          "name": "Multimedia APIs",
          "objects": {
            "Canvas": {
              "name": "Canvas",
              "category": "Web APIs",
              "subcategory": "Multimedia APIs",
              "description": "Provides 2D rendering context for drawing graphics.",
              "properties": {
                "width": {
                  "name": "width",
                  "description": "Canvas width",
                  "type": "property"
                },
                "height": {
                  "name": "height",
                  "description": "Canvas height",
                  "type": "property"
                }
              },
              "methods": {
                "getContext": {
                  "name": "getContext",
                  "description": "Gets rendering context",
                  "type": "method",
                  "static": false
                },
                "toDataURL": {
                  "name": "toDataURL",
                  "description": "Exports canvas as data URL",
                  "type": "method",
                  "static": false
                },
                "toBlob": {
                  "name": "toBlob",
                  "description": "Exports canvas as Blob",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            },
            "CanvasRenderingContext2D": {
              "name": "CanvasRenderingContext2D",
              "category": "Web APIs",
              "subcategory": "Multimedia APIs",
              "description": "2D rendering context for canvas element.",
              "properties": {
                "fillStyle": {
                  "name": "fillStyle",
                  "description": "Fill color or pattern",
                  "type": "property"
                },
                "strokeStyle": {
                  "name": "strokeStyle",
                  "description": "Stroke color or pattern",
                  "type": "property"
                },
                "lineWidth": {
                  "name": "lineWidth",
                  "description": "Line width",
                  "type": "property"
                },
                "lineCap": {
                  "name": "lineCap",
                  "description": "Line cap style",
                  "type": "property"
                },
                "lineJoin": {
                  "name": "lineJoin",
                  "description": "Line join style",
                  "type": "property"
                },
                "font": {
                  "name": "font",
                  "description": "Font specification",
                  "type": "property"
                },
                "textAlign": {
                  "name": "textAlign",
                  "description": "Text alignment",
                  "type": "property"
                },
                "textBaseline": {
                  "name": "textBaseline",
                  "description": "Text baseline",
                  "type": "property"
                },
                "globalAlpha": {
                  "name": "globalAlpha",
                  "description": "Global transparency",
                  "type": "property"
                },
                "globalCompositeOperation": {
                  "name": "globalCompositeOperation",
                  "description": "Composite operation",
                  "type": "property"
                }
              },
              "methods": {
                "fillRect": {
                  "name": "fillRect",
                  "description": "Fills rectangle",
                  "type": "method",
                  "static": false
                },
                "strokeRect": {
                  "name": "strokeRect",
                  "description": "Strokes rectangle outline",
                  "type": "method",
                  "static": false
                },
                "clearRect": {
                  "name": "clearRect",
                  "description": "Clears rectangle area",
                  "type": "method",
                  "static": false
                },
                "beginPath": {
                  "name": "beginPath",
                  "description": "Begins new path",
                  "type": "method",
                  "static": false
                },
                "closePath": {
                  "name": "closePath",
                  "description": "Closes current path",
                  "type": "method",
                  "static": false
                },
                "moveTo": {
                  "name": "moveTo",
                  "description": "Moves path to point",
                  "type": "method",
                  "static": false
                },
                "lineTo": {
                  "name": "lineTo",
                  "description": "Draws line to point",
                  "type": "method",
                  "static": false
                },
                "arc": {
                  "name": "arc",
                  "description": "Draws arc",
                  "type": "method",
                  "static": false
                },
                "bezierCurveTo": {
                  "name": "bezierCurveTo",
                  "description": "Draws bezier curve",
                  "type": "method",
                  "static": false
                },
                "quadraticCurveTo": {
                  "name": "quadraticCurveTo",
                  "description": "Draws quadratic curve",
                  "type": "method",
                  "static": false
                },
                "fill": {
                  "name": "fill",
                  "description": "Fills current path",
                  "type": "method",
                  "static": false
                },
                "stroke": {
                  "name": "stroke",
                  "description": "Strokes current path",
                  "type": "method",
                  "static": false
                },
                "clip": {
                  "name": "clip",
                  "description": "Creates clipping path",
                  "type": "method",
                  "static": false
                },
                "save": {
                  "name": "save",
                  "description": "Saves current state",
                  "type": "method",
                  "static": false
                },
                "restore": {
                  "name": "restore",
                  "description": "Restores previous state",
                  "type": "method",
                  "static": false
                },
                "translate": {
                  "name": "translate",
                  "description": "Translates coordinate system",
                  "type": "method",
                  "static": false
                },
                "rotate": {
                  "name": "rotate",
                  "description": "Rotates coordinate system",
                  "type": "method",
                  "static": false
                },
                "scale": {
                  "name": "scale",
                  "description": "Scales coordinate system",
                  "type": "method",
                  "static": false
                },
                "transform": {
                  "name": "transform",
                  "description": "Applies transformation matrix",
                  "type": "method",
                  "static": false
                },
                "setTransform": {
                  "name": "setTransform",
                  "description": "Sets transformation matrix",
                  "type": "method",
                  "static": false
                },
                "fillText": {
                  "name": "fillText",
                  "description": "Fills text",
                  "type": "method",
                  "static": false
                },
                "strokeText": {
                  "name": "strokeText",
                  "description": "Strokes text outline",
                  "type": "method",
                  "static": false
                },
                "measureText": {
                  "name": "measureText",
                  "description": "Measures text dimensions",
                  "type": "method",
                  "static": false
                },
                "drawImage": {
                  "name": "drawImage",
                  "description": "Draws image",
                  "type": "method",
                  "static": false
                },
                "createImageData": {
                  "name": "createImageData",
                  "description": "Creates image data",
                  "type": "method",
                  "static": false
                },
                "getImageData": {
                  "name": "getImageData",
                  "description": "Gets image data",
                  "type": "method",
                  "static": false
                },
                "putImageData": {
                  "name": "putImageData",
                  "description": "Puts image data",
                  "type": "method",
                  "static": false
                }
              },
              "staticMethods": {},
              "examples": []
            }
          },
          "keywords": {}
        }
      },
      "objects": {
        "Document": {
          "name": "Document",
          "category": "Web APIs",
          "subcategory": "DOM Manipulation",
          "description": "Represents the HTML document and provides access to DOM tree.",
          "properties": {
            "body": {
              "name": "body",
              "description": "Reference to document body element",
              "type": "property"
            },
            "head": {
              "name": "head",
              "description": "Reference to document head element",
              "type": "property"
            },
            "title": {
              "name": "title",
              "description": "Document title",
              "type": "property"
            },
            "URL": {
              "name": "URL",
              "description": "Document URL",
              "type": "property"
            },
            "domain": {
              "name": "domain",
              "description": "Document domain",
              "type": "property"
            },
            "cookie": {
              "name": "cookie",
              "description": "Document cookies",
              "type": "property"
            },
            "readyState": {
              "name": "readyState",
              "description": "Document loading state",
              "type": "property"
            }
          },
          "methods": {
            "createElement": {
              "name": "createElement",
              "description": "Creates new HTML element",
              "type": "method",
              "static": false
            },
            "createTextNode": {
              "name": "createTextNode",
              "description": "Creates new text node",
              "type": "method",
              "static": false
            },
            "getElementById": {
              "name": "getElementById",
              "description": "Gets element by ID",
              "type": "method",
              "static": false
            },
            "getElementsByClassName": {
              "name": "getElementsByClassName",
              "description": "Gets elements by class name",
              "type": "method",
              "static": false
            },
            "getElementsByTagName": {
              "name": "getElementsByTagName",
              "description": "Gets elements by tag name",
              "type": "method",
              "static": false
            },
            "querySelector": {
              "name": "querySelector",
              "description": "Gets first element matching CSS selector",
              "type": "method",
              "static": false
            },
            "querySelectorAll": {
              "name": "querySelectorAll",
              "description": "Gets all elements matching CSS selector",
              "type": "method",
              "static": false
            },
            "addEventListener": {
              "name": "addEventListener",
              "description": "Adds event listener to document",
              "type": "method",
              "static": false
            },
            "removeEventListener": {
              "name": "removeEventListener",
              "description": "Removes event listener from document",
              "type": "method",
              "static": false
            },
            "write": {
              "name": "write",
              "description": "Writes HTML to document",
              "type": "method",
              "static": false
            },
            "writeln": {
              "name": "writeln",
              "description": "Writes HTML to document with newline",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Element": {
          "name": "Element",
          "category": "Web APIs",
          "subcategory": "DOM Manipulation",
          "description": "Represents an HTML element in the DOM tree.",
          "properties": {
            "innerHTML": {
              "name": "innerHTML",
              "description": "HTML content of element",
              "type": "property"
            },
            "textContent": {
              "name": "textContent",
              "description": "Text content of element",
              "type": "property"
            },
            "classList": {
              "name": "classList",
              "description": "DOMTokenList of element classes",
              "type": "property"
            },
            "className": {
              "name": "className",
              "description": "Class attribute as string",
              "type": "property"
            },
            "id": {
              "name": "id",
              "description": "ID attribute",
              "type": "property"
            },
            "tagName": {
              "name": "tagName",
              "description": "Tag name in uppercase",
              "type": "property"
            },
            "parentNode": {
              "name": "parentNode",
              "description": "Parent element",
              "type": "property"
            },
            "children": {
              "name": "children",
              "description": "Child elements",
              "type": "property"
            },
            "firstChild": {
              "name": "firstChild",
              "description": "First child node",
              "type": "property"
            },
            "lastChild": {
              "name": "lastChild",
              "description": "Last child node",
              "type": "property"
            },
            "nextSibling": {
              "name": "nextSibling",
              "description": "Next sibling node",
              "type": "property"
            },
            "previousSibling": {
              "name": "previousSibling",
              "description": "Previous sibling node",
              "type": "property"
            }
          },
          "methods": {
            "appendChild": {
              "name": "appendChild",
              "description": "Adds child element",
              "type": "method",
              "static": false
            },
            "removeChild": {
              "name": "removeChild",
              "description": "Removes child element",
              "type": "method",
              "static": false
            },
            "insertBefore": {
              "name": "insertBefore",
              "description": "Inserts element before specified child",
              "type": "method",
              "static": false
            },
            "cloneNode": {
              "name": "cloneNode",
              "description": "Creates copy of element",
              "type": "method",
              "static": false
            },
            "getAttribute": {
              "name": "getAttribute",
              "description": "Gets attribute value",
              "type": "method",
              "static": false
            },
            "setAttribute": {
              "name": "setAttribute",
              "description": "Sets attribute value",
              "type": "method",
              "static": false
            },
            "removeAttribute": {
              "name": "removeAttribute",
              "description": "Removes attribute",
              "type": "method",
              "static": false
            },
            "hasAttribute": {
              "name": "hasAttribute",
              "description": "Checks if attribute exists",
              "type": "method",
              "static": false
            },
            "addEventListener": {
              "name": "addEventListener",
              "description": "Adds event listener",
              "type": "method",
              "static": false
            },
            "removeEventListener": {
              "name": "removeEventListener",
              "description": "Removes event listener",
              "type": "method",
              "static": false
            },
            "querySelector": {
              "name": "querySelector",
              "description": "Gets descendant element matching selector",
              "type": "method",
              "static": false
            },
            "querySelectorAll": {
              "name": "querySelectorAll",
              "description": "Gets all descendant elements matching selector",
              "type": "method",
              "static": false
            },
            "closest": {
              "name": "closest",
              "description": "Gets closest ancestor matching selector",
              "type": "method",
              "static": false
            },
            "matches": {
              "name": "matches",
              "description": "Tests if element matches selector",
              "type": "method",
              "static": false
            },
            "focus": {
              "name": "focus",
              "description": "Sets focus to element",
              "type": "method",
              "static": false
            },
            "blur": {
              "name": "blur",
              "description": "Removes focus from element",
              "type": "method",
              "static": false
            },
            "click": {
              "name": "click",
              "description": "Simulates mouse click",
              "type": "method",
              "static": false
            },
            "scroll": {
              "name": "scroll",
              "description": "Scrolls element content",
              "type": "method",
              "static": false
            },
            "scrollIntoView": {
              "name": "scrollIntoView",
              "description": "Scrolls element into view",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Response": {
          "name": "Response",
          "category": "Web APIs",
          "subcategory": "Network APIs",
          "description": "Represents response to fetch request.",
          "properties": {
            "ok": {
              "name": "ok",
              "description": "Whether response was successful",
              "type": "property"
            },
            "status": {
              "name": "status",
              "description": "HTTP status code",
              "type": "property"
            },
            "statusText": {
              "name": "statusText",
              "description": "HTTP status message",
              "type": "property"
            },
            "headers": {
              "name": "headers",
              "description": "Response headers",
              "type": "property"
            },
            "url": {
              "name": "url",
              "description": "Response URL",
              "type": "property"
            },
            "redirected": {
              "name": "redirected",
              "description": "Whether response is result of redirect",
              "type": "property"
            }
          },
          "methods": {
            "json": {
              "name": "json",
              "description": "Parses response body as JSON",
              "type": "method",
              "static": false
            },
            "text": {
              "name": "text",
              "description": "Parses response body as text",
              "type": "method",
              "static": false
            },
            "blob": {
              "name": "blob",
              "description": "Parses response body as Blob",
              "type": "method",
              "static": false
            },
            "arrayBuffer": {
              "name": "arrayBuffer",
              "description": "Parses response body as ArrayBuffer",
              "type": "method",
              "static": false
            },
            "formData": {
              "name": "formData",
              "description": "Parses response body as FormData",
              "type": "method",
              "static": false
            },
            "clone": {
              "name": "clone",
              "description": "Creates copy of response",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "WebSocket": {
          "name": "WebSocket",
          "category": "Web APIs",
          "subcategory": "Network APIs",
          "description": "Provides full-duplex communication over single TCP connection.",
          "properties": {
            "url": {
              "name": "url",
              "description": "WebSocket URL",
              "type": "property"
            },
            "readyState": {
              "name": "readyState",
              "description": "Connection state",
              "type": "property"
            },
            "protocol": {
              "name": "protocol",
              "description": "Selected protocol",
              "type": "property"
            },
            "binaryType": {
              "name": "binaryType",
              "description": "Type for binary data",
              "type": "property"
            },
            "onopen": {
              "name": "onopen",
              "description": "Connection opened",
              "type": "property"
            },
            "onmessage": {
              "name": "onmessage",
              "description": "Message received",
              "type": "property"
            },
            "onerror": {
              "name": "onerror",
              "description": "Error occurred",
              "type": "property"
            },
            "onclose": {
              "name": "onclose",
              "description": "Connection closed",
              "type": "property"
            }
          },
          "methods": {
            "send": {
              "name": "send",
              "description": "Sends data through WebSocket",
              "type": "method",
              "static": false
            },
            "close": {
              "name": "close",
              "description": "Closes WebSocket connection",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "Canvas": {
          "name": "Canvas",
          "category": "Web APIs",
          "subcategory": "Multimedia APIs",
          "description": "Provides 2D rendering context for drawing graphics.",
          "properties": {
            "width": {
              "name": "width",
              "description": "Canvas width",
              "type": "property"
            },
            "height": {
              "name": "height",
              "description": "Canvas height",
              "type": "property"
            }
          },
          "methods": {
            "getContext": {
              "name": "getContext",
              "description": "Gets rendering context",
              "type": "method",
              "static": false
            },
            "toDataURL": {
              "name": "toDataURL",
              "description": "Exports canvas as data URL",
              "type": "method",
              "static": false
            },
            "toBlob": {
              "name": "toBlob",
              "description": "Exports canvas as Blob",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        },
        "CanvasRenderingContext2D": {
          "name": "CanvasRenderingContext2D",
          "category": "Web APIs",
          "subcategory": "Multimedia APIs",
          "description": "2D rendering context for canvas element.",
          "properties": {
            "fillStyle": {
              "name": "fillStyle",
              "description": "Fill color or pattern",
              "type": "property"
            },
            "strokeStyle": {
              "name": "strokeStyle",
              "description": "Stroke color or pattern",
              "type": "property"
            },
            "lineWidth": {
              "name": "lineWidth",
              "description": "Line width",
              "type": "property"
            },
            "lineCap": {
              "name": "lineCap",
              "description": "Line cap style",
              "type": "property"
            },
            "lineJoin": {
              "name": "lineJoin",
              "description": "Line join style",
              "type": "property"
            },
            "font": {
              "name": "font",
              "description": "Font specification",
              "type": "property"
            },
            "textAlign": {
              "name": "textAlign",
              "description": "Text alignment",
              "type": "property"
            },
            "textBaseline": {
              "name": "textBaseline",
              "description": "Text baseline",
              "type": "property"
            },
            "globalAlpha": {
              "name": "globalAlpha",
              "description": "Global transparency",
              "type": "property"
            },
            "globalCompositeOperation": {
              "name": "globalCompositeOperation",
              "description": "Composite operation",
              "type": "property"
            }
          },
          "methods": {
            "fillRect": {
              "name": "fillRect",
              "description": "Fills rectangle",
              "type": "method",
              "static": false
            },
            "strokeRect": {
              "name": "strokeRect",
              "description": "Strokes rectangle outline",
              "type": "method",
              "static": false
            },
            "clearRect": {
              "name": "clearRect",
              "description": "Clears rectangle area",
              "type": "method",
              "static": false
            },
            "beginPath": {
              "name": "beginPath",
              "description": "Begins new path",
              "type": "method",
              "static": false
            },
            "closePath": {
              "name": "closePath",
              "description": "Closes current path",
              "type": "method",
              "static": false
            },
            "moveTo": {
              "name": "moveTo",
              "description": "Moves path to point",
              "type": "method",
              "static": false
            },
            "lineTo": {
              "name": "lineTo",
              "description": "Draws line to point",
              "type": "method",
              "static": false
            },
            "arc": {
              "name": "arc",
              "description": "Draws arc",
              "type": "method",
              "static": false
            },
            "bezierCurveTo": {
              "name": "bezierCurveTo",
              "description": "Draws bezier curve",
              "type": "method",
              "static": false
            },
            "quadraticCurveTo": {
              "name": "quadraticCurveTo",
              "description": "Draws quadratic curve",
              "type": "method",
              "static": false
            },
            "fill": {
              "name": "fill",
              "description": "Fills current path",
              "type": "method",
              "static": false
            },
            "stroke": {
              "name": "stroke",
              "description": "Strokes current path",
              "type": "method",
              "static": false
            },
            "clip": {
              "name": "clip",
              "description": "Creates clipping path",
              "type": "method",
              "static": false
            },
            "save": {
              "name": "save",
              "description": "Saves current state",
              "type": "method",
              "static": false
            },
            "restore": {
              "name": "restore",
              "description": "Restores previous state",
              "type": "method",
              "static": false
            },
            "translate": {
              "name": "translate",
              "description": "Translates coordinate system",
              "type": "method",
              "static": false
            },
            "rotate": {
              "name": "rotate",
              "description": "Rotates coordinate system",
              "type": "method",
              "static": false
            },
            "scale": {
              "name": "scale",
              "description": "Scales coordinate system",
              "type": "method",
              "static": false
            },
            "transform": {
              "name": "transform",
              "description": "Applies transformation matrix",
              "type": "method",
              "static": false
            },
            "setTransform": {
              "name": "setTransform",
              "description": "Sets transformation matrix",
              "type": "method",
              "static": false
            },
            "fillText": {
              "name": "fillText",
              "description": "Fills text",
              "type": "method",
              "static": false
            },
            "strokeText": {
              "name": "strokeText",
              "description": "Strokes text outline",
              "type": "method",
              "static": false
            },
            "measureText": {
              "name": "measureText",
              "description": "Measures text dimensions",
              "type": "method",
              "static": false
            },
            "drawImage": {
              "name": "drawImage",
              "description": "Draws image",
              "type": "method",
              "static": false
            },
            "createImageData": {
              "name": "createImageData",
              "description": "Creates image data",
              "type": "method",
              "static": false
            },
            "getImageData": {
              "name": "getImageData",
              "description": "Gets image data",
              "type": "method",
              "static": false
            },
            "putImageData": {
              "name": "putImageData",
              "description": "Puts image data",
              "type": "method",
              "static": false
            }
          },
          "staticMethods": {},
          "examples": []
        }
      },
      "keywords": {
        "fetch": {
          "name": "fetch",
          "category": "Web APIs",
          "subcategory": "Network APIs",
          "description": "Modern API for making HTTP requests.",
          "attributes": {
            "fetch": {
              "name": "fetch",
              "description": "Makes HTTP request and returns Promise",
              "type": "attribute"
            },
            "url": {
              "name": "url",
              "description": "Request URL",
              "type": "attribute"
            },
            "method": {
              "name": "method",
              "description": "HTTP method",
              "type": "attribute"
            },
            "headers": {
              "name": "headers",
              "description": "Request headers",
              "type": "attribute"
            },
            "body": {
              "name": "body",
              "description": "Request body",
              "type": "attribute"
            },
            "mode": {
              "name": "mode",
              "description": "Request mode (cors, no-cors, same-origin)",
              "type": "attribute"
            },
            "credentials": {
              "name": "credentials",
              "description": "Request credentials (omit, same-origin, include)",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "localStorage": {
          "name": "localStorage",
          "category": "Web APIs",
          "subcategory": "Storage APIs",
          "description": "Provides access to local storage for the domain.",
          "attributes": {
            "setItem": {
              "name": "setItem",
              "description": "Stores item in local storage",
              "type": "attribute"
            },
            "getItem": {
              "name": "getItem",
              "description": "Retrieves item from local storage",
              "type": "attribute"
            },
            "removeItem": {
              "name": "removeItem",
              "description": "Removes item from local storage",
              "type": "attribute"
            },
            "clear": {
              "name": "clear",
              "description": "Removes all items from local storage",
              "type": "attribute"
            },
            "key": {
              "name": "key",
              "description": "Gets key at specified index",
              "type": "attribute"
            },
            "length": {
              "name": "length",
              "description": "Number of items in storage",
              "type": "attribute"
            }
          },
          "examples": []
        },
        "sessionStorage": {
          "name": "sessionStorage",
          "category": "Web APIs",
          "subcategory": "Storage APIs",
          "description": "Provides access to session storage for the domain.",
          "attributes": {
            "setItem": {
              "name": "setItem",
              "description": "Stores item in session storage",
              "type": "attribute"
            },
            "getItem": {
              "name": "getItem",
              "description": "Retrieves item from session storage",
              "type": "attribute"
            },
            "removeItem": {
              "name": "removeItem",
              "description": "Removes item from session storage",
              "type": "attribute"
            },
            "clear": {
              "name": "clear",
              "description": "Removes all items from session storage",
              "type": "attribute"
            },
            "key": {
              "name": "key",
              "description": "Gets key at specified index",
              "type": "attribute"
            },
            "length": {
              "name": "length",
              "description": "Number of items in storage",
              "type": "attribute"
            }
          },
          "examples": []
        }
      }
    }
  },
  "objects": {
    "...": {
      "name": "...",
      "category": "Core Language Syntax",
      "subcategory": "Modern Operators and Syntax",
      "description": "Spread and rest operator for arrays, objects, and function parameters.",
      "properties": {},
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "??": {
      "name": "??",
      "category": "Core Language Syntax",
      "subcategory": "Modern Operators and Syntax",
      "description": "Nullish coalescing operator returns right operand when left is null or undefined.",
      "properties": {},
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "?.": {
      "name": "?.",
      "category": "Core Language Syntax",
      "subcategory": "Modern Operators and Syntax",
      "description": "Optional chaining operator safely accesses nested object properties.",
      "properties": {},
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "**": {
      "name": "**",
      "category": "Core Language Syntax",
      "subcategory": "Modern Operators and Syntax",
      "description": "Exponentiation operator performs mathematical exponentiation.",
      "properties": {},
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "**=": {
      "name": "**=",
      "category": "Core Language Syntax",
      "subcategory": "Modern Operators and Syntax",
      "description": "Exponentiation assignment operator.",
      "properties": {},
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "&&=": {
      "name": "&&=",
      "category": "Core Language Syntax",
      "subcategory": "Modern Operators and Syntax",
      "description": "Logical AND assignment operator.",
      "properties": {},
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "||=": {
      "name": "||=",
      "category": "Core Language Syntax",
      "subcategory": "Modern Operators and Syntax",
      "description": "Logical OR assignment operator.",
      "properties": {},
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "??=": {
      "name": "??=",
      "category": "Core Language Syntax",
      "subcategory": "Modern Operators and Syntax",
      "description": "Nullish coalescing assignment operator.",
      "properties": {},
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "=": {
      "name": "=",
      "category": "Core Language Syntax",
      "subcategory": "Modern Operators and Syntax",
      "description": "Arrow function syntax for creating function expressions.",
      "properties": {},
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "Object": {
      "name": "Object",
      "category": "Built-in Objects",
      "subcategory": "Global Objects",
      "description": "The base object from which all JavaScript objects inherit.",
      "properties": {},
      "methods": {
        "assign": {
          "name": "assign",
          "description": "Copies properties from source objects to target object",
          "type": "method",
          "static": false
        },
        "create": {
          "name": "create",
          "description": "Creates a new object with specified prototype",
          "type": "method",
          "static": false
        },
        "defineProperty": {
          "name": "defineProperty",
          "description": "Defines a new property or modifies an existing property",
          "type": "method",
          "static": false
        },
        "defineProperties": {
          "name": "defineProperties",
          "description": "Defines multiple properties",
          "type": "method",
          "static": false
        },
        "entries": {
          "name": "entries",
          "description": "Returns array of key-value pairs",
          "type": "method",
          "static": false
        },
        "freeze": {
          "name": "freeze",
          "description": "Freezes an object, preventing modifications",
          "type": "method",
          "static": false
        },
        "fromEntries": {
          "name": "fromEntries",
          "description": "Creates object from array of key-value pairs",
          "type": "method",
          "static": false
        },
        "getOwnPropertyDescriptor": {
          "name": "getOwnPropertyDescriptor",
          "description": "Returns property descriptor",
          "type": "method",
          "static": false
        },
        "getOwnPropertyDescriptors": {
          "name": "getOwnPropertyDescriptors",
          "description": "Returns all property descriptors",
          "type": "method",
          "static": false
        },
        "getOwnPropertyNames": {
          "name": "getOwnPropertyNames",
          "description": "Returns array of all property names",
          "type": "method",
          "static": false
        },
        "getOwnPropertySymbols": {
          "name": "getOwnPropertySymbols",
          "description": "Returns array of symbol properties",
          "type": "method",
          "static": false
        },
        "getPrototypeOf": {
          "name": "getPrototypeOf",
          "description": "Returns the prototype of an object",
          "type": "method",
          "static": false
        },
        "hasOwnProperty": {
          "name": "hasOwnProperty",
          "description": "Tests if object has specified property",
          "type": "method",
          "static": false
        },
        "is": {
          "name": "is",
          "description": "Determines if two values are the same",
          "type": "method",
          "static": false
        },
        "isExtensible": {
          "name": "isExtensible",
          "description": "Determines if object is extensible",
          "type": "method",
          "static": false
        },
        "isFrozen": {
          "name": "isFrozen",
          "description": "Determines if object is frozen",
          "type": "method",
          "static": false
        },
        "isSealed": {
          "name": "isSealed",
          "description": "Determines if object is sealed",
          "type": "method",
          "static": false
        },
        "keys": {
          "name": "keys",
          "description": "Returns array of property names",
          "type": "method",
          "static": false
        },
        "preventExtensions": {
          "name": "preventExtensions",
          "description": "Prevents new properties from being added",
          "type": "method",
          "static": false
        },
        "seal": {
          "name": "seal",
          "description": "Seals an object, preventing new properties",
          "type": "method",
          "static": false
        },
        "setPrototypeOf": {
          "name": "setPrototypeOf",
          "description": "Sets the prototype of an object",
          "type": "method",
          "static": false
        },
        "values": {
          "name": "values",
          "description": "Returns array of property values",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Array": {
      "name": "Array",
      "category": "Built-in Objects",
      "subcategory": "Global Objects",
      "description": "Represents an array of items.",
      "properties": {
        "length": {
          "name": "length",
          "description": "Number of elements in the array",
          "type": "property"
        }
      },
      "methods": {
        "at": {
          "name": "at",
          "description": "Returns element at specified index (supports negative indices)",
          "type": "method",
          "static": false
        },
        "concat": {
          "name": "concat",
          "description": "Merges arrays and returns new array",
          "type": "method",
          "static": false
        },
        "copyWithin": {
          "name": "copyWithin",
          "description": "Copies array elements within the array",
          "type": "method",
          "static": false
        },
        "entries": {
          "name": "entries",
          "description": "Returns iterator of key-value pairs",
          "type": "method",
          "static": false
        },
        "every": {
          "name": "every",
          "description": "Tests if all elements pass the test function",
          "type": "method",
          "static": false
        },
        "fill": {
          "name": "fill",
          "description": "Fills array elements with a static value",
          "type": "method",
          "static": false
        },
        "filter": {
          "name": "filter",
          "description": "Creates new array with elements that pass the test",
          "type": "method",
          "static": false
        },
        "find": {
          "name": "find",
          "description": "Returns first element that matches the test function",
          "type": "method",
          "static": false
        },
        "findIndex": {
          "name": "findIndex",
          "description": "Returns index of first element that matches the test",
          "type": "method",
          "static": false
        },
        "findLast": {
          "name": "findLast",
          "description": "Returns last element that matches the test function",
          "type": "method",
          "static": false
        },
        "findLastIndex": {
          "name": "findLastIndex",
          "description": "Returns index of last element that matches the test",
          "type": "method",
          "static": false
        },
        "flat": {
          "name": "flat",
          "description": "Flattens nested arrays to specified depth",
          "type": "method",
          "static": false
        },
        "flatMap": {
          "name": "flatMap",
          "description": "Maps and flattens array to specified depth",
          "type": "method",
          "static": false
        },
        "forEach": {
          "name": "forEach",
          "description": "Executes function for each array element",
          "type": "method",
          "static": false
        },
        "from": {
          "name": "from",
          "description": "Creates array from array-like or iterable object",
          "type": "method",
          "static": false
        },
        "includes": {
          "name": "includes",
          "description": "Determines if array includes certain element",
          "type": "method",
          "static": false
        },
        "indexOf": {
          "name": "indexOf",
          "description": "Returns first index of specified element",
          "type": "method",
          "static": false
        },
        "isArray": {
          "name": "isArray",
          "description": "Determines if value is an array",
          "type": "method",
          "static": false
        },
        "join": {
          "name": "join",
          "description": "Joins array elements into a string",
          "type": "method",
          "static": false
        },
        "keys": {
          "name": "keys",
          "description": "Returns iterator of array indices",
          "type": "method",
          "static": false
        },
        "lastIndexOf": {
          "name": "lastIndexOf",
          "description": "Returns last index of specified element",
          "type": "method",
          "static": false
        },
        "map": {
          "name": "map",
          "description": "Creates new array with results of calling function on every element",
          "type": "method",
          "static": false
        },
        "of": {
          "name": "of",
          "description": "Creates array from variable number of arguments",
          "type": "method",
          "static": false
        },
        "pop": {
          "name": "pop",
          "description": "Removes and returns last element",
          "type": "method",
          "static": false
        },
        "push": {
          "name": "push",
          "description": "Adds elements to end of array",
          "type": "method",
          "static": false
        },
        "reduce": {
          "name": "reduce",
          "description": "Reduces array to single value (left-to-right)",
          "type": "method",
          "static": false
        },
        "reduceRight": {
          "name": "reduceRight",
          "description": "Reduces array to single value (right-to-left)",
          "type": "method",
          "static": false
        },
        "reverse": {
          "name": "reverse",
          "description": "Reverses array in place",
          "type": "method",
          "static": false
        },
        "shift": {
          "name": "shift",
          "description": "Removes and returns first element",
          "type": "method",
          "static": false
        },
        "slice": {
          "name": "slice",
          "description": "Returns shallow copy of portion of array",
          "type": "method",
          "static": false
        },
        "some": {
          "name": "some",
          "description": "Tests if at least one element passes the test",
          "type": "method",
          "static": false
        },
        "sort": {
          "name": "sort",
          "description": "Sorts array elements in place",
          "type": "method",
          "static": false
        },
        "splice": {
          "name": "splice",
          "description": "Changes array by removing/replacing/adding elements",
          "type": "method",
          "static": false
        },
        "toLocaleString": {
          "name": "toLocaleString",
          "description": "Returns localized string representation",
          "type": "method",
          "static": false
        },
        "toString": {
          "name": "toString",
          "description": "Returns string representation",
          "type": "method",
          "static": false
        },
        "unshift": {
          "name": "unshift",
          "description": "Adds elements to beginning of array",
          "type": "method",
          "static": false
        },
        "values": {
          "name": "values",
          "description": "Returns iterator of array values",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "String": {
      "name": "String",
      "category": "Built-in Objects",
      "subcategory": "Global Objects",
      "description": "Represents text data.",
      "properties": {
        "length": {
          "name": "length",
          "description": "Number of characters in the string",
          "type": "property"
        }
      },
      "methods": {
        "at": {
          "name": "at",
          "description": "Returns character at specified index (supports negative indices)",
          "type": "method",
          "static": false
        },
        "charAt": {
          "name": "charAt",
          "description": "Returns character at specified index",
          "type": "method",
          "static": false
        },
        "charCodeAt": {
          "name": "charCodeAt",
          "description": "Returns Unicode code point at specified index",
          "type": "method",
          "static": false
        },
        "codePointAt": {
          "name": "codePointAt",
          "description": "Returns Unicode code point value at specified position",
          "type": "method",
          "static": false
        },
        "concat": {
          "name": "concat",
          "description": "Concatenates strings",
          "type": "method",
          "static": false
        },
        "endsWith": {
          "name": "endsWith",
          "description": "Determines if string ends with specified substring",
          "type": "method",
          "static": false
        },
        "fromCharCode": {
          "name": "fromCharCode",
          "description": "Creates string from Unicode code points",
          "type": "method",
          "static": false
        },
        "fromCodePoint": {
          "name": "fromCodePoint",
          "description": "Creates string from Unicode code points",
          "type": "method",
          "static": false
        },
        "includes": {
          "name": "includes",
          "description": "Determines if string contains specified substring",
          "type": "method",
          "static": false
        },
        "indexOf": {
          "name": "indexOf",
          "description": "Returns index of first occurrence of substring",
          "type": "method",
          "static": false
        },
        "lastIndexOf": {
          "name": "lastIndexOf",
          "description": "Returns index of last occurrence of substring",
          "type": "method",
          "static": false
        },
        "localeCompare": {
          "name": "localeCompare",
          "description": "Compares strings according to locale",
          "type": "method",
          "static": false
        },
        "match": {
          "name": "match",
          "description": "Matches string against regular expression",
          "type": "method",
          "static": false
        },
        "matchAll": {
          "name": "matchAll",
          "description": "Returns iterator of all regex matches",
          "type": "method",
          "static": false
        },
        "normalize": {
          "name": "normalize",
          "description": "Returns Unicode normalized form of string",
          "type": "method",
          "static": false
        },
        "padEnd": {
          "name": "padEnd",
          "description": "Pads string from end to specified length",
          "type": "method",
          "static": false
        },
        "padStart": {
          "name": "padStart",
          "description": "Pads string from start to specified length",
          "type": "method",
          "static": false
        },
        "repeat": {
          "name": "repeat",
          "description": "Returns string repeated specified number of times",
          "type": "method",
          "static": false
        },
        "replace": {
          "name": "replace",
          "description": "Replaces substring with new string",
          "type": "method",
          "static": false
        },
        "replaceAll": {
          "name": "replaceAll",
          "description": "Replaces all occurrences of substring",
          "type": "method",
          "static": false
        },
        "search": {
          "name": "search",
          "description": "Searches for regex match and returns index",
          "type": "method",
          "static": false
        },
        "slice": {
          "name": "slice",
          "description": "Extracts section of string",
          "type": "method",
          "static": false
        },
        "split": {
          "name": "split",
          "description": "Splits string into array of substrings",
          "type": "method",
          "static": false
        },
        "startsWith": {
          "name": "startsWith",
          "description": "Determines if string starts with specified substring",
          "type": "method",
          "static": false
        },
        "substring": {
          "name": "substring",
          "description": "Returns substring between two indices",
          "type": "method",
          "static": false
        },
        "toLocaleLowerCase": {
          "name": "toLocaleLowerCase",
          "description": "Returns lowercase string according to locale",
          "type": "method",
          "static": false
        },
        "toLocaleUpperCase": {
          "name": "toLocaleUpperCase",
          "description": "Returns uppercase string according to locale",
          "type": "method",
          "static": false
        },
        "toLowerCase": {
          "name": "toLowerCase",
          "description": "Returns lowercase string",
          "type": "method",
          "static": false
        },
        "toString": {
          "name": "toString",
          "description": "Returns string value",
          "type": "method",
          "static": false
        },
        "toUpperCase": {
          "name": "toUpperCase",
          "description": "Returns uppercase string",
          "type": "method",
          "static": false
        },
        "trim": {
          "name": "trim",
          "description": "Removes whitespace from both ends",
          "type": "method",
          "static": false
        },
        "trimEnd": {
          "name": "trimEnd",
          "description": "Removes whitespace from end",
          "type": "method",
          "static": false
        },
        "trimStart": {
          "name": "trimStart",
          "description": "Removes whitespace from start",
          "type": "method",
          "static": false
        },
        "valueOf": {
          "name": "valueOf",
          "description": "Returns primitive string value",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Number": {
      "name": "Number",
      "category": "Built-in Objects",
      "subcategory": "Global Objects",
      "description": "Represents numeric data.",
      "properties": {
        "EPSILON": {
          "name": "EPSILON",
          "description": "Smallest representable positive number",
          "type": "property"
        },
        "MAX_SAFE_INTEGER": {
          "name": "MAX_SAFE_INTEGER",
          "description": "Maximum safe integer value",
          "type": "property"
        },
        "MAX_VALUE": {
          "name": "MAX_VALUE",
          "description": "Maximum representable positive number",
          "type": "property"
        },
        "MIN_SAFE_INTEGER": {
          "name": "MIN_SAFE_INTEGER",
          "description": "Minimum safe integer value",
          "type": "property"
        },
        "MIN_VALUE": {
          "name": "MIN_VALUE",
          "description": "Smallest representable positive number",
          "type": "property"
        },
        "NEGATIVE_INFINITY": {
          "name": "NEGATIVE_INFINITY",
          "description": "Negative infinity value",
          "type": "property"
        },
        "NaN": {
          "name": "NaN",
          "description": "\"Not a Number\" value",
          "type": "property"
        },
        "POSITIVE_INFINITY": {
          "name": "POSITIVE_INFINITY",
          "description": "Positive infinity value",
          "type": "property"
        }
      },
      "methods": {
        "isFinite": {
          "name": "isFinite",
          "description": "Determines if value is finite number",
          "type": "method",
          "static": false
        },
        "isInteger": {
          "name": "isInteger",
          "description": "Determines if value is integer",
          "type": "method",
          "static": false
        },
        "isNaN": {
          "name": "isNaN",
          "description": "Determines if value is NaN",
          "type": "method",
          "static": false
        },
        "isSafeInteger": {
          "name": "isSafeInteger",
          "description": "Determines if value is safe integer",
          "type": "method",
          "static": false
        },
        "parseFloat": {
          "name": "parseFloat",
          "description": "Parses string and returns floating point number",
          "type": "method",
          "static": false
        },
        "parseInt": {
          "name": "parseInt",
          "description": "Parses string and returns integer",
          "type": "method",
          "static": false
        },
        "toExponential": {
          "name": "toExponential",
          "description": "Returns string in exponential notation",
          "type": "method",
          "static": false
        },
        "toFixed": {
          "name": "toFixed",
          "description": "Returns string with fixed number of decimal places",
          "type": "method",
          "static": false
        },
        "toLocaleString": {
          "name": "toLocaleString",
          "description": "Returns localized string representation",
          "type": "method",
          "static": false
        },
        "toPrecision": {
          "name": "toPrecision",
          "description": "Returns string with specified precision",
          "type": "method",
          "static": false
        },
        "toString": {
          "name": "toString",
          "description": "Returns string representation",
          "type": "method",
          "static": false
        },
        "valueOf": {
          "name": "valueOf",
          "description": "Returns primitive number value",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Boolean": {
      "name": "Boolean",
      "category": "Built-in Objects",
      "subcategory": "Global Objects",
      "description": "Represents true/false values.",
      "properties": {},
      "methods": {
        "toString": {
          "name": "toString",
          "description": "Returns string representation (\"true\" or \"false\")",
          "type": "method",
          "static": false
        },
        "valueOf": {
          "name": "valueOf",
          "description": "Returns primitive boolean value",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Function": {
      "name": "Function",
      "category": "Built-in Objects",
      "subcategory": "Global Objects",
      "description": "Represents executable code.",
      "properties": {
        "length": {
          "name": "length",
          "description": "Number of expected arguments",
          "type": "property"
        },
        "name": {
          "name": "name",
          "description": "Function name",
          "type": "property"
        }
      },
      "methods": {
        "apply": {
          "name": "apply",
          "description": "Calls function with given this value and arguments array",
          "type": "method",
          "static": false
        },
        "bind": {
          "name": "bind",
          "description": "Creates new function with specified this value and arguments",
          "type": "method",
          "static": false
        },
        "call": {
          "name": "call",
          "description": "Calls function with given this value and individual arguments",
          "type": "method",
          "static": false
        },
        "toString": {
          "name": "toString",
          "description": "Returns string representation of function",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Error": {
      "name": "Error",
      "category": "Built-in Objects",
      "subcategory": "Error Objects",
      "description": "Represents runtime errors.",
      "properties": {
        "message": {
          "name": "message",
          "description": "Error description",
          "type": "property"
        },
        "name": {
          "name": "name",
          "description": "Error name",
          "type": "property"
        },
        "stack": {
          "name": "stack",
          "description": "Stack trace (non-standard but widely supported)",
          "type": "property"
        }
      },
      "methods": {
        "toString": {
          "name": "toString",
          "description": "Returns string representation of error",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "SyntaxError": {
      "name": "SyntaxError",
      "category": "Built-in Objects",
      "subcategory": "Error Objects",
      "description": "Represents syntax errors in code.",
      "properties": {
        "message": {
          "name": "message",
          "description": "Error description",
          "type": "property"
        },
        "name": {
          "name": "name",
          "description": "Error name (\"SyntaxError\")",
          "type": "property"
        }
      },
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "ReferenceError": {
      "name": "ReferenceError",
      "category": "Built-in Objects",
      "subcategory": "Error Objects",
      "description": "Represents reference errors (undefined variables).",
      "properties": {
        "message": {
          "name": "message",
          "description": "Error description",
          "type": "property"
        },
        "name": {
          "name": "name",
          "description": "Error name (\"ReferenceError\")",
          "type": "property"
        }
      },
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "TypeError": {
      "name": "TypeError",
      "category": "Built-in Objects",
      "subcategory": "Error Objects",
      "description": "Represents type errors.",
      "properties": {
        "message": {
          "name": "message",
          "description": "Error description",
          "type": "property"
        },
        "name": {
          "name": "name",
          "description": "Error name (\"TypeError\")",
          "type": "property"
        }
      },
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "RangeError": {
      "name": "RangeError",
      "category": "Built-in Objects",
      "subcategory": "Error Objects",
      "description": "Represents range errors.",
      "properties": {
        "message": {
          "name": "message",
          "description": "Error description",
          "type": "property"
        },
        "name": {
          "name": "name",
          "description": "Error name (\"RangeError\")",
          "type": "property"
        }
      },
      "methods": {},
      "staticMethods": {},
      "examples": []
    },
    "Date": {
      "name": "Date",
      "category": "Built-in Objects",
      "subcategory": "Date and Math",
      "description": "Represents dates and times.",
      "properties": {},
      "methods": {
        "getDate": {
          "name": "getDate",
          "description": "Returns day of month (1-31)",
          "type": "method",
          "static": false
        },
        "getDay": {
          "name": "getDay",
          "description": "Returns day of week (0-6)",
          "type": "method",
          "static": false
        },
        "getFullYear": {
          "name": "getFullYear",
          "description": "Returns full year",
          "type": "method",
          "static": false
        },
        "getHours": {
          "name": "getHours",
          "description": "Returns hours (0-23)",
          "type": "method",
          "static": false
        },
        "getMilliseconds": {
          "name": "getMilliseconds",
          "description": "Returns milliseconds (0-999)",
          "type": "method",
          "static": false
        },
        "getMinutes": {
          "name": "getMinutes",
          "description": "Returns minutes (0-59)",
          "type": "method",
          "static": false
        },
        "getMonth": {
          "name": "getMonth",
          "description": "Returns month (0-11)",
          "type": "method",
          "static": false
        },
        "getSeconds": {
          "name": "getSeconds",
          "description": "Returns seconds (0-59)",
          "type": "method",
          "static": false
        },
        "getTime": {
          "name": "getTime",
          "description": "Returns milliseconds since epoch",
          "type": "method",
          "static": false
        },
        "getTimezoneOffset": {
          "name": "getTimezoneOffset",
          "description": "Returns timezone offset in minutes",
          "type": "method",
          "static": false
        },
        "setDate": {
          "name": "setDate",
          "description": "Sets day of month",
          "type": "method",
          "static": false
        },
        "setFullYear": {
          "name": "setFullYear",
          "description": "Sets full year",
          "type": "method",
          "static": false
        },
        "setHours": {
          "name": "setHours",
          "description": "Sets hours",
          "type": "method",
          "static": false
        },
        "setMilliseconds": {
          "name": "setMilliseconds",
          "description": "Sets milliseconds",
          "type": "method",
          "static": false
        },
        "setMinutes": {
          "name": "setMinutes",
          "description": "Sets minutes",
          "type": "method",
          "static": false
        },
        "setMonth": {
          "name": "setMonth",
          "description": "Sets month",
          "type": "method",
          "static": false
        },
        "setSeconds": {
          "name": "setSeconds",
          "description": "Sets seconds",
          "type": "method",
          "static": false
        },
        "setTime": {
          "name": "setTime",
          "description": "Sets time by milliseconds since epoch",
          "type": "method",
          "static": false
        },
        "toDateString": {
          "name": "toDateString",
          "description": "Returns date portion as string",
          "type": "method",
          "static": false
        },
        "toISOString": {
          "name": "toISOString",
          "description": "Returns ISO 8601 string",
          "type": "method",
          "static": false
        },
        "toJSON": {
          "name": "toJSON",
          "description": "Returns JSON representation",
          "type": "method",
          "static": false
        },
        "toLocaleDateString": {
          "name": "toLocaleDateString",
          "description": "Returns localized date string",
          "type": "method",
          "static": false
        },
        "toLocaleString": {
          "name": "toLocaleString",
          "description": "Returns localized date/time string",
          "type": "method",
          "static": false
        },
        "toLocaleTimeString": {
          "name": "toLocaleTimeString",
          "description": "Returns localized time string",
          "type": "method",
          "static": false
        },
        "toString": {
          "name": "toString",
          "description": "Returns string representation",
          "type": "method",
          "static": false
        },
        "toTimeString": {
          "name": "toTimeString",
          "description": "Returns time portion as string",
          "type": "method",
          "static": false
        },
        "toUTCString": {
          "name": "toUTCString",
          "description": "Returns UTC string",
          "type": "method",
          "static": false
        },
        "valueOf": {
          "name": "valueOf",
          "description": "Returns primitive number value",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {
        "now": {
          "name": "now",
          "description": "Returns current timestamp",
          "type": "static method",
          "static": true
        },
        "parse": {
          "name": "parse",
          "description": "Parses date string",
          "type": "static method",
          "static": true
        }
      },
      "examples": []
    },
    "Math": {
      "name": "Math",
      "category": "Built-in Objects",
      "subcategory": "Date and Math",
      "description": "Provides mathematical constants and functions.",
      "properties": {
        "E": {
          "name": "E",
          "description": "Euler's number",
          "type": "property"
        },
        "LN10": {
          "name": "LN10",
          "description": "Natural logarithm of 10",
          "type": "property"
        },
        "LN2": {
          "name": "LN2",
          "description": "Natural logarithm of 2",
          "type": "property"
        },
        "LOG10E": {
          "name": "LOG10E",
          "description": "Base 10 logarithm of E",
          "type": "property"
        },
        "LOG2E": {
          "name": "LOG2E",
          "description": "Base 2 logarithm of E",
          "type": "property"
        },
        "PI": {
          "name": "PI",
          "description": "Pi constant",
          "type": "property"
        },
        "SQRT1_2": {
          "name": "SQRT1_2",
          "description": "Square root of 1/2",
          "type": "property"
        },
        "SQRT2": {
          "name": "SQRT2",
          "description": "Square root of 2",
          "type": "property"
        }
      },
      "methods": {
        "abs": {
          "name": "abs",
          "description": "Absolute value",
          "type": "method",
          "static": false
        },
        "acos": {
          "name": "acos",
          "description": "Arccosine",
          "type": "method",
          "static": false
        },
        "acosh": {
          "name": "acosh",
          "description": "Hyperbolic arccosine",
          "type": "method",
          "static": false
        },
        "asin": {
          "name": "asin",
          "description": "Arcsine",
          "type": "method",
          "static": false
        },
        "asinh": {
          "name": "asinh",
          "description": "Hyperbolic arcsine",
          "type": "method",
          "static": false
        },
        "atan": {
          "name": "atan",
          "description": "Arctangent",
          "type": "method",
          "static": false
        },
        "atan2": {
          "name": "atan2",
          "description": "Arctangent of y/x",
          "type": "method",
          "static": false
        },
        "atanh": {
          "name": "atanh",
          "description": "Hyperbolic arctangent",
          "type": "method",
          "static": false
        },
        "cbrt": {
          "name": "cbrt",
          "description": "Cube root",
          "type": "method",
          "static": false
        },
        "ceil": {
          "name": "ceil",
          "description": "Ceiling (round up)",
          "type": "method",
          "static": false
        },
        "clz32": {
          "name": "clz32",
          "description": "Number of leading zero bits in 32-bit binary",
          "type": "method",
          "static": false
        },
        "cos": {
          "name": "cos",
          "description": "Cosine",
          "type": "method",
          "static": false
        },
        "cosh": {
          "name": "cosh",
          "description": "Hyperbolic cosine",
          "type": "method",
          "static": false
        },
        "exp": {
          "name": "exp",
          "description": "E raised to power",
          "type": "method",
          "static": false
        },
        "expm1": {
          "name": "expm1",
          "description": "E raised to power minus 1",
          "type": "method",
          "static": false
        },
        "floor": {
          "name": "floor",
          "description": "Floor (round down)",
          "type": "method",
          "static": false
        },
        "fround": {
          "name": "fround",
          "description": "Nearest single precision float",
          "type": "method",
          "static": false
        },
        "hypot": {
          "name": "hypot",
          "description": "Square root of sum of squares",
          "type": "method",
          "static": false
        },
        "imul": {
          "name": "imul",
          "description": "32-bit integer multiplication",
          "type": "method",
          "static": false
        },
        "log": {
          "name": "log",
          "description": "Natural logarithm",
          "type": "method",
          "static": false
        },
        "log10": {
          "name": "log10",
          "description": "Base 10 logarithm",
          "type": "method",
          "static": false
        },
        "log1p": {
          "name": "log1p",
          "description": "Natural logarithm of 1 + x",
          "type": "method",
          "static": false
        },
        "log2": {
          "name": "log2",
          "description": "Base 2 logarithm",
          "type": "method",
          "static": false
        },
        "max": {
          "name": "max",
          "description": "Maximum value",
          "type": "method",
          "static": false
        },
        "min": {
          "name": "min",
          "description": "Minimum value",
          "type": "method",
          "static": false
        },
        "pow": {
          "name": "pow",
          "description": "Power",
          "type": "method",
          "static": false
        },
        "random": {
          "name": "random",
          "description": "Random number between 0 and 1",
          "type": "method",
          "static": false
        },
        "round": {
          "name": "round",
          "description": "Round to nearest integer",
          "type": "method",
          "static": false
        },
        "sign": {
          "name": "sign",
          "description": "Sign of number (-1, 0, or 1)",
          "type": "method",
          "static": false
        },
        "sin": {
          "name": "sin",
          "description": "Sine",
          "type": "method",
          "static": false
        },
        "sinh": {
          "name": "sinh",
          "description": "Hyperbolic sine",
          "type": "method",
          "static": false
        },
        "sqrt": {
          "name": "sqrt",
          "description": "Square root",
          "type": "method",
          "static": false
        },
        "tan": {
          "name": "tan",
          "description": "Tangent",
          "type": "method",
          "static": false
        },
        "tanh": {
          "name": "tanh",
          "description": "Hyperbolic tangent",
          "type": "method",
          "static": false
        },
        "trunc": {
          "name": "trunc",
          "description": "Integer part (truncate decimals)",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Map": {
      "name": "Map",
      "category": "Collections",
      "subcategory": null,
      "description": "Represents a collection of key-value pairs.",
      "properties": {
        "size": {
          "name": "size",
          "description": "Number of entries in the map",
          "type": "property"
        }
      },
      "methods": {
        "clear": {
          "name": "clear",
          "description": "Removes all entries",
          "type": "method",
          "static": false
        },
        "delete": {
          "name": "delete",
          "description": "Removes entry with specified key",
          "type": "method",
          "static": false
        },
        "entries": {
          "name": "entries",
          "description": "Returns iterator of key-value pairs",
          "type": "method",
          "static": false
        },
        "forEach": {
          "name": "forEach",
          "description": "Executes function for each entry",
          "type": "method",
          "static": false
        },
        "get": {
          "name": "get",
          "description": "Returns value for specified key",
          "type": "method",
          "static": false
        },
        "has": {
          "name": "has",
          "description": "Tests if key exists in map",
          "type": "method",
          "static": false
        },
        "keys": {
          "name": "keys",
          "description": "Returns iterator of keys",
          "type": "method",
          "static": false
        },
        "set": {
          "name": "set",
          "description": "Sets value for specified key",
          "type": "method",
          "static": false
        },
        "values": {
          "name": "values",
          "description": "Returns iterator of values",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Set": {
      "name": "Set",
      "category": "Collections",
      "subcategory": null,
      "description": "Represents a collection of unique values.",
      "properties": {
        "size": {
          "name": "size",
          "description": "Number of values in the set",
          "type": "property"
        }
      },
      "methods": {
        "add": {
          "name": "add",
          "description": "Adds value to set",
          "type": "method",
          "static": false
        },
        "clear": {
          "name": "clear",
          "description": "Removes all values",
          "type": "method",
          "static": false
        },
        "delete": {
          "name": "delete",
          "description": "Removes specified value",
          "type": "method",
          "static": false
        },
        "entries": {
          "name": "entries",
          "description": "Returns iterator of value-value pairs",
          "type": "method",
          "static": false
        },
        "forEach": {
          "name": "forEach",
          "description": "Executes function for each value",
          "type": "method",
          "static": false
        },
        "has": {
          "name": "has",
          "description": "Tests if value exists in set",
          "type": "method",
          "static": false
        },
        "keys": {
          "name": "keys",
          "description": "Returns iterator of values (same as values())",
          "type": "method",
          "static": false
        },
        "values": {
          "name": "values",
          "description": "Returns iterator of values",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "WeakMap": {
      "name": "WeakMap",
      "category": "Collections",
      "subcategory": null,
      "description": "Represents a collection of key-value pairs with weak references.",
      "properties": {},
      "methods": {
        "delete": {
          "name": "delete",
          "description": "Removes entry with specified key",
          "type": "method",
          "static": false
        },
        "get": {
          "name": "get",
          "description": "Returns value for specified key",
          "type": "method",
          "static": false
        },
        "has": {
          "name": "has",
          "description": "Tests if key exists in map",
          "type": "method",
          "static": false
        },
        "set": {
          "name": "set",
          "description": "Sets value for specified key",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "WeakSet": {
      "name": "WeakSet",
      "category": "Collections",
      "subcategory": null,
      "description": "Represents a collection of unique objects with weak references.",
      "properties": {},
      "methods": {
        "add": {
          "name": "add",
          "description": "Adds object to set",
          "type": "method",
          "static": false
        },
        "delete": {
          "name": "delete",
          "description": "Removes specified object",
          "type": "method",
          "static": false
        },
        "has": {
          "name": "has",
          "description": "Tests if object exists in set",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Promise": {
      "name": "Promise",
      "category": "Promises and Async",
      "subcategory": null,
      "description": "Represents eventual completion or failure of asynchronous operation.",
      "properties": {},
      "methods": {
        "all": {
          "name": "all",
          "description": "Waits for all promises to resolve",
          "type": "method",
          "static": false
        },
        "allSettled": {
          "name": "allSettled",
          "description": "Waits for all promises to settle (resolve or reject)",
          "type": "method",
          "static": false
        },
        "any": {
          "name": "any",
          "description": "Resolves when any promise resolves",
          "type": "method",
          "static": false
        },
        "catch": {
          "name": "catch",
          "description": "Handles promise rejection",
          "type": "method",
          "static": false
        },
        "finally": {
          "name": "finally",
          "description": "Executes code regardless of promise outcome",
          "type": "method",
          "static": false
        },
        "race": {
          "name": "race",
          "description": "Resolves when first promise settles",
          "type": "method",
          "static": false
        },
        "then": {
          "name": "then",
          "description": "Handles promise resolution",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {
        "reject": {
          "name": "reject",
          "description": "Creates rejected promise",
          "type": "static method",
          "static": true
        },
        "resolve": {
          "name": "resolve",
          "description": "Creates resolved promise",
          "type": "static method",
          "static": true
        }
      },
      "examples": []
    },
    "Symbol": {
      "name": "Symbol",
      "category": "ES6+ Modern Features",
      "subcategory": "Symbols and Primitives",
      "description": "Represents a unique identifier that can be used as object keys.",
      "properties": {
        "description": {
          "name": "description",
          "description": "Optional description of the symbol",
          "type": "property"
        },
        "iterator": {
          "name": "iterator",
          "description": "Well-known symbol for iteration protocol",
          "type": "property"
        },
        "asyncIterator": {
          "name": "asyncIterator",
          "description": "Well-known symbol for async iteration protocol",
          "type": "property"
        },
        "toStringTag": {
          "name": "toStringTag",
          "description": "Well-known symbol for default object description",
          "type": "property"
        }
      },
      "methods": {
        "for": {
          "name": "for",
          "description": "Searches for existing symbol in global registry",
          "type": "method",
          "static": false
        },
        "keyFor": {
          "name": "keyFor",
          "description": "Returns key for globally registered symbol",
          "type": "method",
          "static": false
        },
        "toString": {
          "name": "toString",
          "description": "Returns string representation of symbol",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "BigInt": {
      "name": "BigInt",
      "category": "ES6+ Modern Features",
      "subcategory": "Symbols and Primitives",
      "description": "Represents arbitrarily large integers beyond Number.MAX_SAFE_INTEGER.",
      "properties": {},
      "methods": {
        "asIntN": {
          "name": "asIntN",
          "description": "Wraps BigInt value to signed integer",
          "type": "method",
          "static": false
        },
        "asUintN": {
          "name": "asUintN",
          "description": "Wraps BigInt value to unsigned integer",
          "type": "method",
          "static": false
        },
        "toString": {
          "name": "toString",
          "description": "Returns string representation",
          "type": "method",
          "static": false
        },
        "valueOf": {
          "name": "valueOf",
          "description": "Returns primitive BigInt value",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Proxy": {
      "name": "Proxy",
      "category": "ES6+ Modern Features",
      "subcategory": "Reflection and Metaprogramming",
      "description": "Enables creation of proxy objects to intercept and customize operations.",
      "properties": {},
      "methods": {
        "revocable": {
          "name": "revocable",
          "description": "Creates revocable proxy object",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Reflect": {
      "name": "Reflect",
      "category": "ES6+ Modern Features",
      "subcategory": "Reflection and Metaprogramming",
      "description": "Provides methods for interceptable JavaScript operations.",
      "properties": {},
      "methods": {
        "apply": {
          "name": "apply",
          "description": "Calls target function with specified arguments",
          "type": "method",
          "static": false
        },
        "construct": {
          "name": "construct",
          "description": "Acts like new operator as function",
          "type": "method",
          "static": false
        },
        "defineProperty": {
          "name": "defineProperty",
          "description": "Defines property on object",
          "type": "method",
          "static": false
        },
        "deleteProperty": {
          "name": "deleteProperty",
          "description": "Deletes property from object",
          "type": "method",
          "static": false
        },
        "get": {
          "name": "get",
          "description": "Gets property value from object",
          "type": "method",
          "static": false
        },
        "getOwnPropertyDescriptor": {
          "name": "getOwnPropertyDescriptor",
          "description": "Gets property descriptor",
          "type": "method",
          "static": false
        },
        "getPrototypeOf": {
          "name": "getPrototypeOf",
          "description": "Gets prototype of object",
          "type": "method",
          "static": false
        },
        "has": {
          "name": "has",
          "description": "Checks if property exists in object",
          "type": "method",
          "static": false
        },
        "isExtensible": {
          "name": "isExtensible",
          "description": "Checks if object is extensible",
          "type": "method",
          "static": false
        },
        "ownKeys": {
          "name": "ownKeys",
          "description": "Returns array of object's own property keys",
          "type": "method",
          "static": false
        },
        "preventExtensions": {
          "name": "preventExtensions",
          "description": "Prevents new properties from being added",
          "type": "method",
          "static": false
        },
        "set": {
          "name": "set",
          "description": "Sets property value on object",
          "type": "method",
          "static": false
        },
        "setPrototypeOf": {
          "name": "setPrototypeOf",
          "description": "Sets prototype of object",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Iterator": {
      "name": "Iterator",
      "category": "ES6+ Modern Features",
      "subcategory": "Iterators and Generators",
      "description": "Base interface for objects that implement iteration protocol.",
      "properties": {},
      "methods": {
        "next": {
          "name": "next",
          "description": "Returns next value in iteration sequence",
          "type": "method",
          "static": false
        },
        "return": {
          "name": "return",
          "description": "Terminates iterator and returns given value",
          "type": "method",
          "static": false
        },
        "throw": {
          "name": "throw",
          "description": "Throws error into iterator",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Generator": {
      "name": "Generator",
      "category": "ES6+ Modern Features",
      "subcategory": "Iterators and Generators",
      "description": "Special type of iterator created by generator functions.",
      "properties": {},
      "methods": {
        "next": {
          "name": "next",
          "description": "Resumes execution and returns next yielded value",
          "type": "method",
          "static": false
        },
        "return": {
          "name": "return",
          "description": "Forces generator to return given value",
          "type": "method",
          "static": false
        },
        "throw": {
          "name": "throw",
          "description": "Throws exception into generator",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Document": {
      "name": "Document",
      "category": "Web APIs",
      "subcategory": "DOM Manipulation",
      "description": "Represents the HTML document and provides access to DOM tree.",
      "properties": {
        "body": {
          "name": "body",
          "description": "Reference to document body element",
          "type": "property"
        },
        "head": {
          "name": "head",
          "description": "Reference to document head element",
          "type": "property"
        },
        "title": {
          "name": "title",
          "description": "Document title",
          "type": "property"
        },
        "URL": {
          "name": "URL",
          "description": "Document URL",
          "type": "property"
        },
        "domain": {
          "name": "domain",
          "description": "Document domain",
          "type": "property"
        },
        "cookie": {
          "name": "cookie",
          "description": "Document cookies",
          "type": "property"
        },
        "readyState": {
          "name": "readyState",
          "description": "Document loading state",
          "type": "property"
        }
      },
      "methods": {
        "createElement": {
          "name": "createElement",
          "description": "Creates new HTML element",
          "type": "method",
          "static": false
        },
        "createTextNode": {
          "name": "createTextNode",
          "description": "Creates new text node",
          "type": "method",
          "static": false
        },
        "getElementById": {
          "name": "getElementById",
          "description": "Gets element by ID",
          "type": "method",
          "static": false
        },
        "getElementsByClassName": {
          "name": "getElementsByClassName",
          "description": "Gets elements by class name",
          "type": "method",
          "static": false
        },
        "getElementsByTagName": {
          "name": "getElementsByTagName",
          "description": "Gets elements by tag name",
          "type": "method",
          "static": false
        },
        "querySelector": {
          "name": "querySelector",
          "description": "Gets first element matching CSS selector",
          "type": "method",
          "static": false
        },
        "querySelectorAll": {
          "name": "querySelectorAll",
          "description": "Gets all elements matching CSS selector",
          "type": "method",
          "static": false
        },
        "addEventListener": {
          "name": "addEventListener",
          "description": "Adds event listener to document",
          "type": "method",
          "static": false
        },
        "removeEventListener": {
          "name": "removeEventListener",
          "description": "Removes event listener from document",
          "type": "method",
          "static": false
        },
        "write": {
          "name": "write",
          "description": "Writes HTML to document",
          "type": "method",
          "static": false
        },
        "writeln": {
          "name": "writeln",
          "description": "Writes HTML to document with newline",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Element": {
      "name": "Element",
      "category": "Web APIs",
      "subcategory": "DOM Manipulation",
      "description": "Represents an HTML element in the DOM tree.",
      "properties": {
        "innerHTML": {
          "name": "innerHTML",
          "description": "HTML content of element",
          "type": "property"
        },
        "textContent": {
          "name": "textContent",
          "description": "Text content of element",
          "type": "property"
        },
        "classList": {
          "name": "classList",
          "description": "DOMTokenList of element classes",
          "type": "property"
        },
        "className": {
          "name": "className",
          "description": "Class attribute as string",
          "type": "property"
        },
        "id": {
          "name": "id",
          "description": "ID attribute",
          "type": "property"
        },
        "tagName": {
          "name": "tagName",
          "description": "Tag name in uppercase",
          "type": "property"
        },
        "parentNode": {
          "name": "parentNode",
          "description": "Parent element",
          "type": "property"
        },
        "children": {
          "name": "children",
          "description": "Child elements",
          "type": "property"
        },
        "firstChild": {
          "name": "firstChild",
          "description": "First child node",
          "type": "property"
        },
        "lastChild": {
          "name": "lastChild",
          "description": "Last child node",
          "type": "property"
        },
        "nextSibling": {
          "name": "nextSibling",
          "description": "Next sibling node",
          "type": "property"
        },
        "previousSibling": {
          "name": "previousSibling",
          "description": "Previous sibling node",
          "type": "property"
        }
      },
      "methods": {
        "appendChild": {
          "name": "appendChild",
          "description": "Adds child element",
          "type": "method",
          "static": false
        },
        "removeChild": {
          "name": "removeChild",
          "description": "Removes child element",
          "type": "method",
          "static": false
        },
        "insertBefore": {
          "name": "insertBefore",
          "description": "Inserts element before specified child",
          "type": "method",
          "static": false
        },
        "cloneNode": {
          "name": "cloneNode",
          "description": "Creates copy of element",
          "type": "method",
          "static": false
        },
        "getAttribute": {
          "name": "getAttribute",
          "description": "Gets attribute value",
          "type": "method",
          "static": false
        },
        "setAttribute": {
          "name": "setAttribute",
          "description": "Sets attribute value",
          "type": "method",
          "static": false
        },
        "removeAttribute": {
          "name": "removeAttribute",
          "description": "Removes attribute",
          "type": "method",
          "static": false
        },
        "hasAttribute": {
          "name": "hasAttribute",
          "description": "Checks if attribute exists",
          "type": "method",
          "static": false
        },
        "addEventListener": {
          "name": "addEventListener",
          "description": "Adds event listener",
          "type": "method",
          "static": false
        },
        "removeEventListener": {
          "name": "removeEventListener",
          "description": "Removes event listener",
          "type": "method",
          "static": false
        },
        "querySelector": {
          "name": "querySelector",
          "description": "Gets descendant element matching selector",
          "type": "method",
          "static": false
        },
        "querySelectorAll": {
          "name": "querySelectorAll",
          "description": "Gets all descendant elements matching selector",
          "type": "method",
          "static": false
        },
        "closest": {
          "name": "closest",
          "description": "Gets closest ancestor matching selector",
          "type": "method",
          "static": false
        },
        "matches": {
          "name": "matches",
          "description": "Tests if element matches selector",
          "type": "method",
          "static": false
        },
        "focus": {
          "name": "focus",
          "description": "Sets focus to element",
          "type": "method",
          "static": false
        },
        "blur": {
          "name": "blur",
          "description": "Removes focus from element",
          "type": "method",
          "static": false
        },
        "click": {
          "name": "click",
          "description": "Simulates mouse click",
          "type": "method",
          "static": false
        },
        "scroll": {
          "name": "scroll",
          "description": "Scrolls element content",
          "type": "method",
          "static": false
        },
        "scrollIntoView": {
          "name": "scrollIntoView",
          "description": "Scrolls element into view",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Response": {
      "name": "Response",
      "category": "Web APIs",
      "subcategory": "Network APIs",
      "description": "Represents response to fetch request.",
      "properties": {
        "ok": {
          "name": "ok",
          "description": "Whether response was successful",
          "type": "property"
        },
        "status": {
          "name": "status",
          "description": "HTTP status code",
          "type": "property"
        },
        "statusText": {
          "name": "statusText",
          "description": "HTTP status message",
          "type": "property"
        },
        "headers": {
          "name": "headers",
          "description": "Response headers",
          "type": "property"
        },
        "url": {
          "name": "url",
          "description": "Response URL",
          "type": "property"
        },
        "redirected": {
          "name": "redirected",
          "description": "Whether response is result of redirect",
          "type": "property"
        }
      },
      "methods": {
        "json": {
          "name": "json",
          "description": "Parses response body as JSON",
          "type": "method",
          "static": false
        },
        "text": {
          "name": "text",
          "description": "Parses response body as text",
          "type": "method",
          "static": false
        },
        "blob": {
          "name": "blob",
          "description": "Parses response body as Blob",
          "type": "method",
          "static": false
        },
        "arrayBuffer": {
          "name": "arrayBuffer",
          "description": "Parses response body as ArrayBuffer",
          "type": "method",
          "static": false
        },
        "formData": {
          "name": "formData",
          "description": "Parses response body as FormData",
          "type": "method",
          "static": false
        },
        "clone": {
          "name": "clone",
          "description": "Creates copy of response",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "WebSocket": {
      "name": "WebSocket",
      "category": "Web APIs",
      "subcategory": "Network APIs",
      "description": "Provides full-duplex communication over single TCP connection.",
      "properties": {
        "url": {
          "name": "url",
          "description": "WebSocket URL",
          "type": "property"
        },
        "readyState": {
          "name": "readyState",
          "description": "Connection state",
          "type": "property"
        },
        "protocol": {
          "name": "protocol",
          "description": "Selected protocol",
          "type": "property"
        },
        "binaryType": {
          "name": "binaryType",
          "description": "Type for binary data",
          "type": "property"
        },
        "onopen": {
          "name": "onopen",
          "description": "Connection opened",
          "type": "property"
        },
        "onmessage": {
          "name": "onmessage",
          "description": "Message received",
          "type": "property"
        },
        "onerror": {
          "name": "onerror",
          "description": "Error occurred",
          "type": "property"
        },
        "onclose": {
          "name": "onclose",
          "description": "Connection closed",
          "type": "property"
        }
      },
      "methods": {
        "send": {
          "name": "send",
          "description": "Sends data through WebSocket",
          "type": "method",
          "static": false
        },
        "close": {
          "name": "close",
          "description": "Closes WebSocket connection",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "Canvas": {
      "name": "Canvas",
      "category": "Web APIs",
      "subcategory": "Multimedia APIs",
      "description": "Provides 2D rendering context for drawing graphics.",
      "properties": {
        "width": {
          "name": "width",
          "description": "Canvas width",
          "type": "property"
        },
        "height": {
          "name": "height",
          "description": "Canvas height",
          "type": "property"
        }
      },
      "methods": {
        "getContext": {
          "name": "getContext",
          "description": "Gets rendering context",
          "type": "method",
          "static": false
        },
        "toDataURL": {
          "name": "toDataURL",
          "description": "Exports canvas as data URL",
          "type": "method",
          "static": false
        },
        "toBlob": {
          "name": "toBlob",
          "description": "Exports canvas as Blob",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    },
    "CanvasRenderingContext2D": {
      "name": "CanvasRenderingContext2D",
      "category": "Web APIs",
      "subcategory": "Multimedia APIs",
      "description": "2D rendering context for canvas element.",
      "properties": {
        "fillStyle": {
          "name": "fillStyle",
          "description": "Fill color or pattern",
          "type": "property"
        },
        "strokeStyle": {
          "name": "strokeStyle",
          "description": "Stroke color or pattern",
          "type": "property"
        },
        "lineWidth": {
          "name": "lineWidth",
          "description": "Line width",
          "type": "property"
        },
        "lineCap": {
          "name": "lineCap",
          "description": "Line cap style",
          "type": "property"
        },
        "lineJoin": {
          "name": "lineJoin",
          "description": "Line join style",
          "type": "property"
        },
        "font": {
          "name": "font",
          "description": "Font specification",
          "type": "property"
        },
        "textAlign": {
          "name": "textAlign",
          "description": "Text alignment",
          "type": "property"
        },
        "textBaseline": {
          "name": "textBaseline",
          "description": "Text baseline",
          "type": "property"
        },
        "globalAlpha": {
          "name": "globalAlpha",
          "description": "Global transparency",
          "type": "property"
        },
        "globalCompositeOperation": {
          "name": "globalCompositeOperation",
          "description": "Composite operation",
          "type": "property"
        }
      },
      "methods": {
        "fillRect": {
          "name": "fillRect",
          "description": "Fills rectangle",
          "type": "method",
          "static": false
        },
        "strokeRect": {
          "name": "strokeRect",
          "description": "Strokes rectangle outline",
          "type": "method",
          "static": false
        },
        "clearRect": {
          "name": "clearRect",
          "description": "Clears rectangle area",
          "type": "method",
          "static": false
        },
        "beginPath": {
          "name": "beginPath",
          "description": "Begins new path",
          "type": "method",
          "static": false
        },
        "closePath": {
          "name": "closePath",
          "description": "Closes current path",
          "type": "method",
          "static": false
        },
        "moveTo": {
          "name": "moveTo",
          "description": "Moves path to point",
          "type": "method",
          "static": false
        },
        "lineTo": {
          "name": "lineTo",
          "description": "Draws line to point",
          "type": "method",
          "static": false
        },
        "arc": {
          "name": "arc",
          "description": "Draws arc",
          "type": "method",
          "static": false
        },
        "bezierCurveTo": {
          "name": "bezierCurveTo",
          "description": "Draws bezier curve",
          "type": "method",
          "static": false
        },
        "quadraticCurveTo": {
          "name": "quadraticCurveTo",
          "description": "Draws quadratic curve",
          "type": "method",
          "static": false
        },
        "fill": {
          "name": "fill",
          "description": "Fills current path",
          "type": "method",
          "static": false
        },
        "stroke": {
          "name": "stroke",
          "description": "Strokes current path",
          "type": "method",
          "static": false
        },
        "clip": {
          "name": "clip",
          "description": "Creates clipping path",
          "type": "method",
          "static": false
        },
        "save": {
          "name": "save",
          "description": "Saves current state",
          "type": "method",
          "static": false
        },
        "restore": {
          "name": "restore",
          "description": "Restores previous state",
          "type": "method",
          "static": false
        },
        "translate": {
          "name": "translate",
          "description": "Translates coordinate system",
          "type": "method",
          "static": false
        },
        "rotate": {
          "name": "rotate",
          "description": "Rotates coordinate system",
          "type": "method",
          "static": false
        },
        "scale": {
          "name": "scale",
          "description": "Scales coordinate system",
          "type": "method",
          "static": false
        },
        "transform": {
          "name": "transform",
          "description": "Applies transformation matrix",
          "type": "method",
          "static": false
        },
        "setTransform": {
          "name": "setTransform",
          "description": "Sets transformation matrix",
          "type": "method",
          "static": false
        },
        "fillText": {
          "name": "fillText",
          "description": "Fills text",
          "type": "method",
          "static": false
        },
        "strokeText": {
          "name": "strokeText",
          "description": "Strokes text outline",
          "type": "method",
          "static": false
        },
        "measureText": {
          "name": "measureText",
          "description": "Measures text dimensions",
          "type": "method",
          "static": false
        },
        "drawImage": {
          "name": "drawImage",
          "description": "Draws image",
          "type": "method",
          "static": false
        },
        "createImageData": {
          "name": "createImageData",
          "description": "Creates image data",
          "type": "method",
          "static": false
        },
        "getImageData": {
          "name": "getImageData",
          "description": "Gets image data",
          "type": "method",
          "static": false
        },
        "putImageData": {
          "name": "putImageData",
          "description": "Puts image data",
          "type": "method",
          "static": false
        }
      },
      "staticMethods": {},
      "examples": []
    }
  },
  "keywords": {
    "break": {
      "name": "break",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Terminates the current loop, switch, or labeled statement.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "case": {
      "name": "case",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Used in switch statements to define a case to be matched.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "async": {
      "name": "async",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Declares an asynchronous function or method.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "await": {
      "name": "await",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Waits for a Promise to resolve within an async function.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "catch": {
      "name": "catch",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Used with try statements to handle exceptions.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "class": {
      "name": "class",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Declares a class with optional inheritance.",
      "attributes": {
        "extends": {
          "name": "extends",
          "description": "Optional superclass to inherit from",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "const": {
      "name": "const",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Declares a block-scoped constant variable.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "continue": {
      "name": "continue",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Skips the current iteration of a loop.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "debugger": {
      "name": "debugger",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Invokes debugging functionality.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "default": {
      "name": "default",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Used in switch statements for the default case, or in export statements.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "delete": {
      "name": "delete",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Removes a property from an object.",
      "attributes": {
        "None specific to this operator": {
          "name": "None specific to this operator",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "do": {
      "name": "do",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Creates a do-while loop.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "else": {
      "name": "else",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Used with if statements for the alternative branch.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "export": {
      "name": "export",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Exports values from a module.",
      "attributes": {
        "default": {
          "name": "default",
          "description": "Whether this is the default export",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "extends": {
      "name": "extends",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Used in class declarations to create inheritance.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "finally": {
      "name": "finally",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Used with try statements for cleanup code.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "for": {
      "name": "for",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Creates various types of loops.",
      "attributes": {
        "in": {
          "name": "in",
          "description": "For-in loop over object properties",
          "type": "attribute"
        },
        "of": {
          "name": "of",
          "description": "For-of loop over iterable values",
          "type": "attribute"
        },
        "await": {
          "name": "await",
          "description": "For-await-of loop over async iterables",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "function": {
      "name": "function",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Declares a function.",
      "attributes": {
        "async": {
          "name": "async",
          "description": "Whether the function is asynchronous",
          "type": "attribute"
        },
        "generator": {
          "name": "generator",
          "description": "Whether the function is a generator (*)",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "if": {
      "name": "if",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Creates conditional statements.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "import": {
      "name": "import",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Imports values from other modules.",
      "attributes": {
        "default": {
          "name": "default",
          "description": "Whether importing the default export",
          "type": "attribute"
        },
        "namespace": {
          "name": "namespace",
          "description": "Whether importing all exports as namespace",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "in": {
      "name": "in",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Tests if a property exists in an object.",
      "attributes": {
        "None specific to this operator": {
          "name": "None specific to this operator",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "instanceof": {
      "name": "instanceof",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Tests if an object is an instance of a specific constructor.",
      "attributes": {
        "None specific to this operator": {
          "name": "None specific to this operator",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "let": {
      "name": "let",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Declares a block-scoped variable.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "new": {
      "name": "new",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Creates an instance of an object.",
      "attributes": {
        "target": {
          "name": "target",
          "description": "In constructors, references the constructor being called",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "null": {
      "name": "null",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Represents intentional absence of any object value.",
      "attributes": {
        "None specific to this literal": {
          "name": "None specific to this literal",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "return": {
      "name": "return",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Returns a value from a function.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "super": {
      "name": "super",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Refers to the parent class constructor or methods.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "switch": {
      "name": "switch",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Creates a switch statement.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "this": {
      "name": "this",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Refers to the current execution context.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "throw": {
      "name": "throw",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Throws an exception.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "try": {
      "name": "try",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Creates a try-catch-finally block.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "typeof": {
      "name": "typeof",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Returns the type of a variable.",
      "attributes": {
        "None specific to this operator": {
          "name": "None specific to this operator",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "undefined": {
      "name": "undefined",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Represents an undefined value.",
      "attributes": {
        "None specific to this literal": {
          "name": "None specific to this literal",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "var": {
      "name": "var",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Declares a function-scoped variable.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "void": {
      "name": "void",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Evaluates an expression and returns undefined.",
      "attributes": {
        "None specific to this operator": {
          "name": "None specific to this operator",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "while": {
      "name": "while",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Creates a while loop.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "with": {
      "name": "with",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Creates a with statement (deprecated).",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "yield": {
      "name": "yield",
      "category": "Core Language Syntax",
      "subcategory": "Keywords and Operators",
      "description": "Pauses and resumes a generator function.",
      "attributes": {
        "None specific to this keyword": {
          "name": "None specific to this keyword",
          "description": "",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "fetch": {
      "name": "fetch",
      "category": "Web APIs",
      "subcategory": "Network APIs",
      "description": "Modern API for making HTTP requests.",
      "attributes": {
        "fetch": {
          "name": "fetch",
          "description": "Makes HTTP request and returns Promise",
          "type": "attribute"
        },
        "url": {
          "name": "url",
          "description": "Request URL",
          "type": "attribute"
        },
        "method": {
          "name": "method",
          "description": "HTTP method",
          "type": "attribute"
        },
        "headers": {
          "name": "headers",
          "description": "Request headers",
          "type": "attribute"
        },
        "body": {
          "name": "body",
          "description": "Request body",
          "type": "attribute"
        },
        "mode": {
          "name": "mode",
          "description": "Request mode (cors, no-cors, same-origin)",
          "type": "attribute"
        },
        "credentials": {
          "name": "credentials",
          "description": "Request credentials (omit, same-origin, include)",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "localStorage": {
      "name": "localStorage",
      "category": "Web APIs",
      "subcategory": "Storage APIs",
      "description": "Provides access to local storage for the domain.",
      "attributes": {
        "setItem": {
          "name": "setItem",
          "description": "Stores item in local storage",
          "type": "attribute"
        },
        "getItem": {
          "name": "getItem",
          "description": "Retrieves item from local storage",
          "type": "attribute"
        },
        "removeItem": {
          "name": "removeItem",
          "description": "Removes item from local storage",
          "type": "attribute"
        },
        "clear": {
          "name": "clear",
          "description": "Removes all items from local storage",
          "type": "attribute"
        },
        "key": {
          "name": "key",
          "description": "Gets key at specified index",
          "type": "attribute"
        },
        "length": {
          "name": "length",
          "description": "Number of items in storage",
          "type": "attribute"
        }
      },
      "examples": []
    },
    "sessionStorage": {
      "name": "sessionStorage",
      "category": "Web APIs",
      "subcategory": "Storage APIs",
      "description": "Provides access to session storage for the domain.",
      "attributes": {
        "setItem": {
          "name": "setItem",
          "description": "Stores item in session storage",
          "type": "attribute"
        },
        "getItem": {
          "name": "getItem",
          "description": "Retrieves item from session storage",
          "type": "attribute"
        },
        "removeItem": {
          "name": "removeItem",
          "description": "Removes item from session storage",
          "type": "attribute"
        },
        "clear": {
          "name": "clear",
          "description": "Removes all items from session storage",
          "type": "attribute"
        },
        "key": {
          "name": "key",
          "description": "Gets key at specified index",
          "type": "attribute"
        },
        "length": {
          "name": "length",
          "description": "Number of items in storage",
          "type": "attribute"
        }
      },
      "examples": []
    }
  },
  "metadata": {
    "version": "1.0.0",
    "lastUpdated": "2025-06-01T03:08:30.322Z",
    "totalCategories": 6,
    "totalObjects": 39,
    "totalKeywords": 41,
    "totalMethods": 305
  }
}